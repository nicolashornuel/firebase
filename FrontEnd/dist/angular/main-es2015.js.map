{"version":3,"sources":["./src/app/services/preference.service.ts","./src/app/services/rss.service.ts","./src/app/modules/material.module.ts","./src/app/graphql.module.ts","./src/app/services/wikipedia.service.ts","./src/app/components/table/table.component.ts","./src/app/components/table/table.component.html","./src/environments/environment.ts","./src/app/components/watch/watch.component.ts","./src/app/components/watch/watch.component.html","./src/app/components/bottom-sheet/bottom-sheet.component.ts","./src/app/components/bottom-sheet/bottom-sheet.component.html","./src/app/components/search-list/search-list.component.ts","./src/app/components/search-list/search-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/enums/radioFrance.enum.ts","./src/app/services/destroy.service.ts","./src/app/components/audio-element/audio-element.component.ts","./src/app/components/audio-element/audio-element.component.html","./src/app/app.module.ts","./src/app/services/discogs.service.ts","./src/environments/environment.prod.ts","./src/app/services/radio.service.ts","./src/app/components/star-rating/star-rating.component.ts","./src/app/components/star-rating/star-rating.component.html","./src/app/services/search.service.ts","./src/app/services/video.service.ts","./src/app/components/toolbar/toolbar.component.ts","./src/app/components/toolbar/toolbar.component.html","./src/app/components/preference/preference.component.ts","./src/app/components/preference/preference.component.html","./src/app/components/radio-player/radio-player.component.ts","./src/app/components/radio-player/radio-player.component.html","./src/app/services/radio-transform.service.ts","./src/app/app-routing.module.ts","./src/app/components/rss-flux/rss-flux.component.ts","./src/app/components/rss-flux/rss-flux.component.html","./src/app/models/radioFrance.interface.ts","./src/app/services/radio-util.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {environment} from '../../environments/environment.prod';\nimport {Preference} from '../models/preference.interface';\nimport {concatMap, filter, map, tap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreferenceService {\n  private URL_BACKEND: string = environment.urlBack;\n  private preference$: BehaviorSubject<Preference> = new BehaviorSubject<Preference>(null);\n\n  constructor(private http: HttpClient) {}\n\n  public async init(): Promise<Preference> {\n    return this.http\n      .get<Preference[]>(`${this.URL_BACKEND}pref`)\n      .toPromise()\n      .then((preferences: Preference[]) => {\n        this.setPreference(preferences[0])\n        return preferences[0]\n      })\n  }\n\n  /**\n   * READ preference FROM database\n   *\n   * @return {*}  {Observable<Preference>}\n   * @memberof PreferenceService\n   */\n  public find(): Observable<Preference> {\n    return this.http.get<Preference[]>(`${this.URL_BACKEND}pref`).pipe(\n      map((preferences: Preference[]) => {\n        return preferences[0];\n      }),\n      tap((preference: Preference) => {\n        this.setPreference(preference);\n      })\n    );\n  }\n\n  /**\n   * CREATE preference into database\n   *\n   * @param {Preference} preference\n   * @return {*}  {Observable<Preference>}\n   * @memberof PreferenceService\n   */\n  public create(preference: Preference): Observable<Preference> {\n    const result = this.http.post<Preference>(`${this.URL_BACKEND}pref`, preference);\n    return result;\n  }\n\n  /**\n   * UPDATE preference into database\n   *\n   * @param {Preference} preference\n   * @return {*}  {Observable<string>}\n   * @memberof PreferenceService\n   */\n  public update(preference: Preference): Observable<string> {\n    const result = this.http.put<string>(`${this.URL_BACKEND}pref`, preference);\n    this.setPreference(preference);\n    return result;\n  }\n\n  /**\n   * GETTER Preference inside global app\n   *\n   * @readonly\n   * @type {Observable<Preference>}\n   * @memberof PreferenceService\n   */\n  public get getPreference$(): Observable<Preference> {\n    return this.preference$.asObservable();\n  }\n\n  /**\n   * SETTER Preference inside global app\n   *\n   * @param {Preference} preference\n   * @memberof PreferenceService\n   */\n  public setPreference(preference: Preference): void {\n    this.preference$.next(preference);\n  }\n}\n","import { HttpClient} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as xml2js from 'xml2js';\nimport { convertableToString, ParserOptions } from 'xml2js';\nimport { NewsRss } from '../models/news-rss.interface';\n\n// https://github.com/Leonidas-from-XIV/node-xml2js\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RssService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * FETCH URL\n   *\n   * @param {string} url\n   * @return {*}  {Observable<any>}\n   * @memberof RssService\n   */\n  public getRSSFeedData(url: string): Observable<any> {\n    const requestOptions: object = {\n      responseType: 'text'\n    };\n    return this.http.get<any>(url, requestOptions);\n  }\n\n  /**\n   * PARSE XML\n   *\n   * @param {convertableToString} data\n   * @return {*}  {Promise<any>}\n   * @memberof RssService\n   */\n  public async parseRSS(data: convertableToString): Promise<NewsRss> {\n    const options: ParserOptions = {\n      trim: true,  \n      explicitArray: true \n    }\n    const parser = new xml2js.Parser(options);\n    return await parser.parseStringPromise(data);\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDividerModule } from '@angular/material/divider';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\n\nconst MaterialComponents = [\n  MatSliderModule,\n  MatInputModule,\n  MatIconModule,\n  MatButtonModule,\n  MatDialogModule,\n  MatMenuModule,\n  MatCardModule,\n  MatGridListModule,\n  MatListModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatBottomSheetModule,\n  MatSnackBarModule,\n  MatExpansionModule,\n  MatSelectModule,\n  MatRadioModule,\n  MatTabsModule,\n  MatTableModule,\n  MatTooltipModule,\n  MatProgressSpinnerModule,\n  MatAutocompleteModule,\n  MatProgressBarModule,\n  MatBadgeModule,\n  MatChipsModule,\n  MatCheckboxModule,\n  MatSlideToggleModule,\n  MatDividerModule,\n  DragDropModule\n];\n\n@NgModule({\n  imports: [MaterialComponents],\n  exports: [MaterialComponents]\n})\nexport class MaterialModule { }\n","import {NgModule} from '@angular/core';\nimport {APOLLO_OPTIONS} from 'apollo-angular';\nimport {ApolloClientOptions, InMemoryCache} from '@apollo/client/core';\nimport {HttpLink} from 'apollo-angular/http';\n\nconst uri = 'https://openapi.radiofrance.fr/v1/graphql?x-token=7cb5e04d-f108-4476-abc8-adf0b037284e'; // <-- add the URL of the GraphQL server here\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\n  return {\n    link: httpLink.create({uri}),\n    cache: new InMemoryCache(),\n  };\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { QueryWikipedia } from '../models/queryWikipedia.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WikipediaService {\n\n    private params: QueryWikipedia = {\n        origin: \"*\",\n        action: \"query\",\n        format: \"json\",\n        uselang: \"user\",\n        prop: \"extracts\",\n        titles: null,\n        redirects: 1,\n        converttitles: 1,\n        exintro: 1,\n        explaintext: 1,\n    };\n\n    constructor(private http: HttpClient) { }\n\n    getWiki(q: string, lang: string): Observable<any> {\n        let url = `https://${lang}.wikipedia.org/w/api.php?`;\n        this.params.titles = encodeURI(q);\n        Object.keys(this.params).forEach(key => url += \"&\" + key + \"=\" + this.params[key]);\n        return this.http.get(url, { responseType: 'json' });\n    }\n\n\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { VideoGAPI } from 'src/app/models/videoGAPI.interface';\nimport { WatchComponent } from '../watch/watch.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { BottomSheetComponent } from '../bottom-sheet/bottom-sheet.component';\nimport { VideoService } from '../../services/video.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute } from '@angular/router';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { DestroyService } from 'src/app/services/destroy.service';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class TableComponent implements OnInit {\n\n  @Input() videos: VideoGAPI[];\n  ratingArr: number[] = [0, 1, 2, 3, 4];\n  dataSource = null;\n  columnsToDisplay = ['categorie', 'channelTitle', 'title', 'publishedAt', 'rating'];\n  expandedElement: VideoGAPI | null;\n  h1: string = null;\n  loading: boolean = false;\n\n  constructor(public dialog: MatDialog,\n    private _sanitizer: DomSanitizer,\n    private _bottomSheet: MatBottomSheet,\n    private videoService: VideoService,\n    private _snackBar: MatSnackBar,\n    private route: ActivatedRoute,\n    private destroy$: DestroyService\n    ) { }\n\n  ngOnInit(): void {\n    this.refreshTable();\n  }\n\n  refreshTable() {\n    this.loading = true\n    this.route.params.pipe(takeUntil(this.destroy$)).subscribe(params => {\n      if (params.categorie === 'all' || params.categorie === undefined) {\n        this.videoService.findAll().pipe(takeUntil(this.destroy$)).subscribe((items: any) => {\n          this.videos = items;\n          this.h1 = `(${items.length}) Vidéos - Toute catégorie confondue`;\n          this.dataSource = new MatTableDataSource(this.videos);\n          this.loading = false;\n        });\n      } else {\n        this.videoService.findByCategorie(params.categorie).pipe(takeUntil(this.destroy$)).subscribe((items: any) => {\n          this.videos = items;\n          this.h1 = `(${items.length}) Vidéos - Catégorie : ${params.categorie}`;\n          this.dataSource = new MatTableDataSource(this.videos);\n          this.loading = false;\n        });\n      }\n    \n  })\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  showIcon(element: VideoGAPI, index: number) {\n    if (element.rating >= index + 1) {\n      return 'star';\n    } else {\n      return 'star_border';\n    }\n  }\n\n  openDialog(element: VideoGAPI): void {\n    this.dialog.open(WatchComponent, {\n      width: '432px',\n      data: {\n        video: {\n          videoId: element.videoId,\n          publishedAt: element.publishedAt,\n          title: element.title,\n          description: element.description,\n          thumbnail: element.thumbnail,\n          channelTitle: element.channelTitle,\n          src: element.src,\n          sanitized: this._sanitizer.bypassSecurityTrustResourceUrl(element.src),\n          categorie: element.categorie,\n          extractWiki: element.extractWiki,\n          rating: element.rating\n        }\n      }\n    });\n  }\n\n  openBottomSheetCate(element: VideoGAPI): void {\n    let data = { video: element, categorie: true };\n    this._bottomSheet.open(BottomSheetComponent, { data: data });\n  }\n\n  openBottomSheetWiki(element: VideoGAPI): void {\n    let data = { video: element, wiki: true };\n    this._bottomSheet.open(BottomSheetComponent, { data: data });\n  }\n\n  delete(element: VideoGAPI): void {\n    let data = { video: element};\n    this.videoService.deleteVideo(data).subscribe(item => {\n      this._snackBar.open(data.video.title, \" supprimé.\", { duration: 5000, });\n      setTimeout( () => { this.refreshTable() }, 3000)\n    });\n  }\n}\n","\n<div *ngIf=\"loading\" class=\"spinner-container\">\n    <mat-spinner color=\"accent\"></mat-spinner>\n</div>\n\n<div *ngIf=\"!loading\" class=\"header\">\n    <div class=\"item-header\">\n        <div class=\"label-table\">\n            <mat-icon>queue_music</mat-icon>\n            <h1>{{h1}}</h1>\n        </div>\n        <mat-form-field>\n            <mat-label>Filtre</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Rock\" #input>\n        </mat-form-field>\n    </div>\n</div>\n\n<div *ngIf=\"!loading\" class=\"container\">\n    <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\">\n        <!-- Categorie Column -->\n        <ng-container matColumnDef=\"categorie\">\n            <th mat-header-cell *matHeaderCellDef>Categorie</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.categorie}}</td>\n        </ng-container>\n        <!-- Title Column -->\n        <ng-container matColumnDef=\"title\">\n            <th mat-header-cell *matHeaderCellDef>Titre</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.title}}</td>\n        </ng-container>\n        <!-- channelTitle Column -->\n        <ng-container matColumnDef=\"channelTitle\">\n            <th mat-header-cell *matHeaderCellDef>Chaine Youtube</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"hidden\">{{element.channelTitle}}</td>\n        </ng-container>\n        <!-- publishedAt Column -->\n        <ng-container matColumnDef=\"publishedAt\">\n            <th mat-header-cell *matHeaderCellDef>Date de publication</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"hidden\">{{element.publishedAt}}</td>\n        </ng-container>\n        <!-- Rating Column -->\n        <ng-container matColumnDef=\"rating\">\n            <th mat-header-cell *matHeaderCellDef>Classement</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"hidden\">\n                <mat-icon *ngFor=\"let ratingId of ratingArr;index as i\">\n                    {{showIcon(element,i)}}\n                </mat-icon>\n            </td>\n        </ng-container>\n        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n        <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n                <div class=\"detail-expanded\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                    <div class=\"detail-description\">\n                        <p><img class=\"thumbnail\" [src]=\"element.thumbnail\">\n                            <span class=\"detail-description-titre\"> Description : </span>\n                            {{element.description}}\n                        </p>\n                        <div class=\"goupe-boutton\">\n                            <button mat-icon-button color=\"accent\" (click)=\"openDialog(element)\">\n                                <mat-icon>play_circle_outline</mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" (click)=\"openBottomSheetCate(element)\">\n                                <mat-icon>edit</mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" (click)=\"delete(element)\">\n                                <mat-icon>delete_outline</mat-icon>\n                            </button>\n                            <button *ngIf=\"element.extractWiki\" mat-icon-button color=\"accent\"\n                                (click)=\"openBottomSheetWiki(element)\">\n                                <img class=\"logo\" src=\"assets/Wiki.svg\" alt=\"logo Wikipedia\" />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </td>\n        </ng-container>\n\n\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky:'true'\" class=\"entete-fixe\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\"\n            [class.example-expanded-row]=\"expandedElement === element\"\n            (click)=\"expandedElement = expandedElement === element ? null : element\">\n        </tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n    </table>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Inject, ViewChild} from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { BottomSheetComponent } from '../bottom-sheet/bottom-sheet.component';\n\n\n@Component({\n  selector: 'app-watch',\n  templateUrl: './watch.component.html',\n  styleUrls: ['./watch.component.scss']\n})\nexport class WatchComponent {\n\n  selectedCategorie: string;\n  categories: any = [];\n  panelOpenState = false;\n  selectedValue: string;\n\n  @ViewChild('iframe') iframe\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private _bottomSheet: MatBottomSheet) { }\n\n    ngOnInit(): void {\n  console.log(this.iframe.nativeElement.children[0])\n    }\n\n  openBottomSheet(data: any): void {    \n    this._bottomSheet.open(BottomSheetComponent, {data: data});\n  }\n\n}\n","<mat-dialog-content class=\"mat-typography\">\n  <h1 matTooltip=\"Titre\" matTooltipPosition=\"left\">{{ data.video.title }}</h1>\n  <mat-progress-bar mode=\"buffer\" color=\"primary\"></mat-progress-bar>\n  <h2 matTooltip=\"Chaine Youtube\" matTooltipPosition=\"left\">{{ data.video.channelTitle }}</h2>\n  <h3 matTooltip=\"Date de publication\" matTooltipPosition=\"left\">{{ data.video.publishedAt }}</h3>\n  <p><span class=\"label\"> Description : </span>{{ data.video.description }}</p>\n  <div #iframe class=\"container\">\n    <iframe class=\"responsive-iframe\" [src]=\"data.video.sanitized\" allowfullscreen frameborder=\"0\">\n    </iframe>\n  </div>\n  <button mat-raised-button color=\"accent\" (click)=\"openBottomSheet(data)\">\n    <mat-icon>settings</mat-icon>\n  </button>\n</mat-dialog-content>\n","import { Component, Inject, Input, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { VideoGAPI } from '../../models/videoGAPI.interface';\nimport { VideoService } from '../../services/video.service';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\n\n\n@Component({\n  selector: 'app-bottom-sheet',\n  templateUrl: './bottom-sheet.component.html',\n  styleUrls: ['./bottom-sheet.component.scss'],\n})\nexport class BottomSheetComponent implements OnInit {\n\n  @Input() videos: VideoGAPI[];\n  @Input() video: VideoGAPI;\n  @ViewChild('input') inputElement: ElementRef;\n  categories: any = [];\n  rating: number;\n\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n    private _snackBar: MatSnackBar,\n    private _bottomSheetRef: MatBottomSheetRef<BottomSheetComponent>,\n    private videoService: VideoService) { }\n\n\n  ngOnInit(): void {\n    this.rating = this.data.video.rating;\n    this.videoService.findAll().subscribe(array => {\n      this.categories = new Set(array.map(item => item.categorie));\n    })\n  }\n\n  openLink(event: MouseEvent): void {\n    this._bottomSheetRef.dismiss();\n    event.preventDefault();\n  }\n\n  updateVideo($event) {\n    this.data.video.rating = $event;\n    this.videoService.updateVideo(this.data).subscribe(item => {\n      this._snackBar.open(this.data.video.title + \" id:\" + item, \"Modifié\", { duration: 5000, });\n      this._bottomSheetRef.dismiss();\n    })\n  }\n\n  addVideo(data) {\n    data.video.rating = 1;\n    data.video.categorie = this.inputElement.nativeElement.value;\n    this.videoService.createVideo(data).subscribe(item => {\n      this._snackBar.open(data.video.title + \" id:\" + item, \"Ajouté\", { duration: 5000, });\n      this._bottomSheetRef.dismiss();\n    })\n  }\n\n}\n","<mat-nav-list>\n\n  <p *ngIf=\"!data.wiki && rating\">Modifier le classement : \n    <app-star-rating [rating]=\"rating\" (ratingUpdated)='updateVideo($event)'></app-star-rating>\n  </p>\n  <mat-accordion>\n    <mat-expansion-panel *ngIf=\"!data.wiki\" [expanded]=\"data.categorie === true\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>{{rating ? \"Changer de categorie : \" + data.video.categorie : \"Ajouter à mes Favoris\"}}\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <div class=\"item-container\">\n        <mat-form-field class=\"item\" appearance=\"fill\">\n          <mat-label>Catégories favorites existantes</mat-label>\n          <input #input matInput list=\"id-categorie\" [(ngModel)]=\"data.video.categorie\">\n          <datalist id=\"id-categorie\">\n            <option *ngFor=\"let categorie of categories\" [value]=\"categorie\">{{categorie}}</option>\n          </datalist>\n        </mat-form-field>\n        <button *ngIf=\"!rating\" class=\"item\" mat-raised-button color=\"accent\" (click)=\"addVideo(data)\">+</button>\n        <button *ngIf=\"rating\" class=\"item\" mat-raised-button color=\"accent\" (click)=\"updateVideo($event)\"><mat-icon>save</mat-icon></button>\n      </div>\n    </mat-expansion-panel>\n\n  </mat-accordion>\n\n  <mat-accordion>\n    <mat-expansion-panel *ngIf=\"!data.categorie && data.video.extractWiki\" [expanded]=\"data.wiki\">\n      <mat-expansion-panel-header>\n        <img  src=\"assets/Wikipedia.svg\" alt=\"logo Wikipedia\" width=\"100px\" />\n      </mat-expansion-panel-header>\n      {{data.video.extractWiki}}\n    </mat-expansion-panel>\n  </mat-accordion>\n\n</mat-nav-list>","import {Component, OnInit, AfterViewInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {ActivatedRoute, Params} from '@angular/router';\n// COMPONENT\nimport {WatchComponent} from '../watch/watch.component';\n// SERVICE\nimport {DiscogsService} from 'src/app/services/discogs.service';\nimport {SearchService} from 'src/app/services/search.service';\nimport {WikipediaService} from 'src/app/services/wikipedia.service';\nimport {PreferenceService} from 'src/app/services/preference.service';\n//INTERFACE\nimport {Preference} from 'src/app/models/preference.interface';\nimport {QueryGAPI} from '../../models/queryGAPI.interface';\nimport {VideoGAPI} from '../../models/videoGAPI.interface';\nimport {QueryDiscogs} from 'src/app/models/queryDiscogs.interface';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {DestroyService} from 'src/app/services/destroy.service';\nimport {combineLatest, forkJoin} from 'rxjs';\n\n@Component({\n  selector: 'app-search-list',\n  templateUrl: './search-list.component.html',\n  styleUrls: ['./search-list.component.scss']\n})\nexport class SearchListComponent implements OnInit, AfterViewInit {\n  loading: boolean = true;\n  keyword: string;\n  preference: Preference;\n  queryDiscogs: QueryDiscogs = {\n    q: null,\n    per_page: null,\n    token: null,\n    artist: null\n  };\n  discogs: any[] = [];\n  extractWiki: string = '';\n  queryGAPI: QueryGAPI = {\n    q: null,\n    maxResults: null,\n    order: null,\n    key: null,\n    part: null,\n    type: null\n  };\n  videos: VideoGAPI[] = [];\n\n  constructor(\n    public dialog: MatDialog,\n    private _sanitizer: DomSanitizer,\n    private route: ActivatedRoute,\n    private discogsService: DiscogsService,\n    private searchService: SearchService,\n    private wikipediaService: WikipediaService,\n    private preferenceService: PreferenceService,\n    private destroy$: DestroyService\n  ) {}\n\n  ngOnInit(): void {\n    this.checkParam();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.loading = false;\n    }, 3000);\n  }\n\n  checkParam() {\n    combineLatest([this.route.params, this.preferenceService.getPreference$])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([params, preference]) => {\n        this.keyword = params.q;\n        this.preference = preference;\n        this.factory();\n      });\n  }\n\n  factory() {\n    if (this.preference.switchDiscogs) {\n      this.searchDiscogs();\n    }\n    if (this.preference.switchWikipedia) {\n      this.searchWikipedia();\n    }\n    if (this.preference.switchYoutube) {\n      this.searchYoutube();\n    }\n  }\n\n  searchDiscogs() {\n    this.queryDiscogs.q = this.keyword;\n    this.queryDiscogs.per_page = this.preference.maxResultsDiscogs;\n    this.discogsService.getByArtistName(this.queryDiscogs).subscribe(result => {\n      this.discogs = result.results.map(elt => {\n        return {\n          title: elt.title,\n          thumb: elt.thumb,\n          year: elt.year,\n          style: elt.style.join(', '),\n          label: [...new Set(elt.label)].slice(0, 6).join(', '),\n          format: [...new Set(elt.format)].join(', ')\n        };\n      });\n    });\n  }\n\n  searchWikipedia() {\n    this.wikipediaService.getWiki(this.keyword, 'fr').subscribe(result => {\n      for (var i in result.query.pages) {\n        this.extractWiki = result.query.pages[i].extract;\n      }\n      if (this.extractWiki == '') {\n        this.wikipediaService.getWiki(this.keyword, 'en').subscribe(result => {\n          for (var i in result.query.pages) {\n            this.extractWiki = result.query.pages[i].extract;\n          }\n        });\n      }\n    });\n  }\n\n  searchYoutube() {\n    this.queryGAPI.q = this.keyword;\n    this.queryGAPI.maxResults = this.preference.maxResultsYoutube;\n    this.queryGAPI.order = this.preference.orderYoutube;\n    this.searchService.getVideos(this.queryGAPI).subscribe((items: any) => {\n      this.videos = items.map(item => {\n        return {\n          videoId: item.id.videoId,\n          publishedAt: new Date(item.snippet.publishedAt).toLocaleDateString(),\n          title: this.decodeHTMLEntities(item.snippet.title),\n          description: this.decodeHTMLEntities(item.snippet.description),\n          thumbnail: item.snippet.thumbnails.medium.url,\n          channelTitle: item.snippet.channelTitle,\n          src: `https://www.youtube.com/embed/${item.id.videoId}`,\n          discogs: this.discogs\n        };\n      });\n    });\n  }\n\n  openDialog(index: number) {\n    this.dialog.open(WatchComponent, {\n      width: '432px',\n      data: {\n        video: {\n          videoId: this.videos[index].videoId,\n          publishedAt: this.videos[index].publishedAt,\n          title: this.videos[index].title,\n          description: this.videos[index].description,\n          thumbnail: this.videos[index].thumbnail,\n          channelTitle: this.videos[index].channelTitle,\n          src: this.videos[index].src,\n          sanitized: this._sanitizer.bypassSecurityTrustResourceUrl(this.videos[index].src),\n          extractWiki: this.extractWiki\n        }\n      }\n    });\n  }\n\n  private decodeHTMLEntities(text: string) {\n    var entities = [\n      ['amp', '&'],\n      ['apos', \"'\"],\n      ['#x27', \"'\"],\n      ['#x2F', '/'],\n      ['#39', \"'\"],\n      ['#47', '/'],\n      ['lt', '<'],\n      ['gt', '>'],\n      ['nbsp', ' '],\n      ['quot', '\"']\n    ];\n\n    for (var i = 0, max = entities.length; i < max; ++i)\n      text = text.replace(new RegExp('&' + entities[i][0] + ';', 'g'), entities[i][1]);\n\n    return text;\n  }\n}\n","<div class=\"chip-container\" >\n  <mat-chip-list aria-label=\"Fish selection\" >\n    <mat-chip color=\"primary\" selected>Résultat de la recherche : {{keyword}}</mat-chip>\n  </mat-chip-list>\n</div>\n\n<div *ngIf=\"loading\" class=\"spinner-container\">\n  <mat-spinner color=\"accent\"></mat-spinner>\n</div>\n\n\n<div class=\"content-container\">\n<div *ngIf=\"discogs.length>0 && !loading\" class=\"carousel\">\n  <img class=\"logo\" alt=\"logo Discogs\" src='../../../assets/discogs-simplified.svg' />\n  <div class=\"margin-flow\">\n    <div class=\"row-flow\">\n      <div *ngFor=\"let discog of discogs\" class=\"column-elt\">\n        <img [src]=\"discog.thumb\">\n        <p>\n          <span *ngIf=\"discog.title\" class=\"label\">Titre : </span>{{ discog.title }}\n          <span *ngIf=\"discog.year\" class=\"label\">Année : </span>{{ discog.year }}\n          <span *ngIf=\"discog.style\" class=\"label\">Style : </span>{{ discog.style }}\n          <span *ngIf=\"discog.label\" class=\"label\">Label : </span>{{ discog.label}}\n          <span *ngIf=\"discog.format\" class=\"label\">Support : </span>{{ discog.format?.slice(0,50) }}\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"extractWiki && !loading\" class=\"header\">\n  <div class=\"item-header\">\n    <img class=\"logo\" alt=\"logo Discogs\" src='../../../assets/Wikipedia.svg' />\n  </div>\n  <div class=\"content\">\n    {{extractWiki}}\n  </div>\n\n</div>\n\n<div *ngIf=\"videos.length>0 && !loading\" class=\"header\">\n  <div class=\"item-header\">\n    <img class=\"logo\" alt=\"logo Youtube\" src='../../../assets/youtube.svg' />\n    <div class=\"slider\" fxShow fxHide.xs>\n      <mat-label>Taille de la grille : </mat-label>\n      <mat-slider [max]=\"8\" [min]=\"1\" [(ngModel)]=\"preference.matSliderValue\"></mat-slider>\n      <mat-icon [matBadge]=\"preference.matSliderValue\" matBadgeColor=\"primary\">view_module</mat-icon>\n    </div>\n  </div>\n\n  <div class=\"content\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n      <div class=\"grid\" [fxFlex]=\"(100/preference.matSliderValue) + '%'\" fxFlex.sm=\"33%\" fxFlex.xs=\"100%\"\n        *ngFor=\"let video of videos; index as i;\">\n        <mat-card class=\"card\" fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">\n          <mat-card-header>\n            <mat-card-title>{{ video.channelTitle }}</mat-card-title>\n            <mat-card-subtitle>{{ video.publishedAt }}</mat-card-subtitle>\n          </mat-card-header>\n          <img mat-card-image [src]=\"video.thumbnail\">\n          <mat-card-content>\n            <p>\n              {{ video.title }}\n            </p>\n          </mat-card-content>\n          <mat-card-actions>\n            <button mat-raised-button color=\"primary\" (click)=\"openDialog(i)\">LIRE</button>\n          </mat-card-actions>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n\n</div>\n</div>","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","<app-toolbar></app-toolbar>\n<app-rss-flux></app-rss-flux>\n\n\n  \n","export enum StationsEnum {\n  FRANCEINTER = 'FRANCEINTER',\n  FRANCEINFO = 'FRANCEINFO',\n  FRANCEBLEU = 'FRANCEBLEU',\n  FRANCEMUSIQUE = 'FRANCEMUSIQUE',\n  FRANCECULTURE = 'FRANCECULTURE',\n  MOUV = \"MOUV\",\n  FIP = 'FIP'\n}\n","import {Injectable, OnDestroy} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DestroyService extends Observable<void> implements OnDestroy {\n  private readonly life$ = new Subject<void>();\n\n  constructor() {\n    super(subscriber => this.life$.subscribe(subscriber));\n  }\n\n  /**\n   * On Destroy\n   */\n  ngOnDestroy() {\n    this.life$.next();\n    this.life$.complete();\n  }\n}","import { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { timer } from 'rxjs';\n\n\n@Component({\n  selector: 'app-audio-element',\n  templateUrl: './audio-element.component.html',\n  styleUrls: ['./audio-element.component.scss']\n})\nexport class AudioElementComponent implements AfterViewInit  {\n\n  @Input() src: String = 'https://icecast.radiofrance.fr/fip-midfi.mp3?id=radiofrance';\n  public isPlaying = true;\n  @ViewChild('audio') audio: ElementRef;\n  @ViewChild('tooltip') tooltip: MatTooltip;\n\n    /**\n   * SET volume & initialize data\n   *\n   * @memberof AudioElementComponent\n   */\n     ngAfterViewInit(): void {\n      timer(500).subscribe(() => (this.audio.nativeElement.volume = 0.1));\n    }\n\n    /**\n   * onClick on icon PLAY/PAUSE player\n   *\n   * @memberof AudioElementComponent\n   */\n     public onTooglePlay(): void {\n      this.isPlaying ? this.audio.nativeElement.pause() : this.audio.nativeElement.play();\n      this.isPlaying = !this.isPlaying;\n    }\n\n\n  /**\n   * onClick to change volume\n   *\n   * @param {string} direction\n   * @memberof AudioElementComponent\n   */\n  public onVolume(direction: string): void {\n    const volume = this.audio.nativeElement.volume;\n    if (volume <= 1 && volume >= 0) {\n      this.audio.nativeElement.volume += direction === 'up' ? 0.1 : -0.1;\n    }\n    this.tooltip.show();\n    setTimeout(() => this.tooltip.hide(), 1000);\n  }\n\n}\n","<audio [src]=\"src\" #audio controls autoplay preload=\"auto\" style=\"display: none\">\n  <source type=\"audio/mpeg\" />\n</audio>\n\n<section class=\"row\">\n  <button (click)=\"onTooglePlay()\" mat-mini-fab color=\"accent\" aria-label=\"Example icon button with a bookmark icon\">\n    <mat-icon *ngIf=\"isPlaying\">pause</mat-icon>\n    <mat-icon *ngIf=\"!isPlaying\">play_arrow</mat-icon>\n  </button>\n\n  <div class=\"my-level\" #tooltip=\"matTooltip\" [matTooltip]=\"audio.volume | number: '1.1-1'\"></div>\n\n  <button\n    [disabled]=\"audio.volume <= 0.1 ? true : false\"\n    (click)=\"onVolume('down')\"\n    mat-icon-button\n    color=\"accent\"\n    aria-label=\"button volume_down\"\n  >\n    <mat-icon>volume_down</mat-icon>\n  </button>\n  <button\n    [disabled]=\"audio.volume >= 0.9 ? true : false\"\n    (click)=\"onVolume('up')\"\n    mat-icon-button\n    color=\"accent\"\n    aria-label=\"button volume_up\"\n  >\n    <mat-icon>volume_up</mat-icon>\n  </button>\n</section>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './modules/material.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SearchListComponent } from './components/search-list/search-list.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { WatchComponent } from './components/watch/watch.component';\nimport { BottomSheetComponent } from './components/bottom-sheet/bottom-sheet.component';\nimport { TableComponent } from './components/table/table.component';\nimport { StarRatingComponent } from './components/star-rating/star-rating.component';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { PreferenceComponent } from './components/preference/preference.component';\nimport { RadioPlayerComponent } from './components/radio-player/radio-player.component';\nimport { RssFluxComponent } from './components/rss-flux/rss-flux.component';\nimport { GraphQLModule } from './graphql.module';\nimport { APP_INITIALIZER } from '@angular/core';\nimport { PreferenceService } from './services/preference.service';\nimport { AudioElementComponent } from './components/audio-element/audio-element.component';\n\nexport function initializeApp(pref: PreferenceService) {\n  return (): Promise<any> => { \n    return pref.init();\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchListComponent,\n    WatchComponent,\n    BottomSheetComponent,\n    TableComponent,\n    StarRatingComponent,\n    ToolbarComponent,\n    PreferenceComponent,\n    RadioPlayerComponent,\n    RssFluxComponent,\n    AudioElementComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    GraphQLModule\n  ],\n  providers: [{\n      provide: APP_INITIALIZER,\n      useFactory: initializeApp,\n      deps: [PreferenceService],\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment.prod';\nimport { QueryDiscogs } from '../models/queryDiscogs.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DiscogsService {\n\n    private url: string = environment.urlApiDiscogs;\n    private params: QueryDiscogs = {\n        q: \"\",\n        per_page: 50,\n        token: environment.discogsToken,\n        artist: \"\",\n    }\n\n    constructor(private http: HttpClient) { }\n\n    getAll(q: string): Observable<any> {\n        this.params.q = encodeURI(q);\n        let endPoint = `${this.url}/database/search?`;\n        Object.keys(this.params).forEach(key => endPoint += \"&\" + key + \"=\" + this.params[key]);\n        return this.http.get(endPoint, { responseType: 'json' });\n    }\n\n    getByArtistName(queryDiscogs: QueryDiscogs): Observable<any> {\n        this.params.artist = encodeURI(queryDiscogs.q);\n        this.params.per_page = queryDiscogs.per_page;\n        let endPoint = `${this.url}/database/search?`;\n        Object.keys(this.params).forEach(key => endPoint += \"&\" + key + \"=\" + this.params[key]);\n        return this.http.get(endPoint, { responseType: 'json' });\n    }\n\n    getContributorById(id: number): Observable<any> {\n        let endPoint = `${this.url}/artists/${id}`;\n        return this.http.get(endPoint, { responseType: 'json' });\n    }\n\n}","export const environment = {\n  production: true,\n  discogsToken: \"lFqQfxurDTjYekydiilIbmdglWEdZqWinZMEnugw\",\n  youtubeToken: \"AIzaSyDhkZWj-Pp9cPApBeWn94XO43gGpMCith0\",\n  urlApiDiscogs: \"https://api.discogs.com\",\n  urlApiYoutube: \"https://www.googleapis.com/youtube/v3/search?\",\n  //urlBack: \"http://localhost:5001/fourthproject-aff75/us-central1/app/fire\",\n  urlBack: \"https://us-central1-fourthproject-aff75.cloudfunctions.net/app/fire\",\n};\n","import {Injectable} from '@angular/core';\nimport {ApolloQueryResult} from '@apollo/client/core';\nimport {Apollo, gql, QueryRef} from 'apollo-angular';\nimport {Observable} from 'rxjs';\nimport {map, tap} from 'rxjs/operators';\nimport {StationsEnum} from '../enums/radioFrance.enum';\nimport {Brand, Grid, Live} from '../models/radioFrance.interface';\n\n// see https://apollo-angular.com/docs/development-and-testing/testing\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RadioService {\n  constructor(private apollo: Apollo) {}\n\n  /**\n   * GET an object LIVE by StationsEnum\n   *\n   * @param {StationsEnum} station\n   * @return {*}  {QueryRef<Live>}\n   * @memberof RadioService\n   */\n  public getLive(station: StationsEnum): QueryRef<Live> {\n    const GET_LIVE = gql`\n      query GetLive($station: StationsEnum!) {\n        live(station: $station) {\n          show {\n            ... on DiffusionStep {\n              start\n              end\n              __typename\n              diffusion {\n                title\n                standFirst\n              }\n            }\n            ... on BlankStep {\n              start\n              end\n              __typename\n              title\n            }\n          }\n          program {\n            ... on DiffusionStep {\n              start\n              end\n              __typename\n              diffusion {\n                title\n                standFirst\n              }\n            }\n            ... on BlankStep {\n              start\n              end\n              __typename\n              title\n            }\n          }\n          song {\n            ... on TrackStep {\n              start\n              end\n              __typename\n              track {\n                title\n                performers\n              }\n            }\n          }\n        }\n      }\n    `;\n\n    return this.apollo.watchQuery<any>({\n      query: GET_LIVE,\n      variables: {station}\n    });\n  }\n\n  /**\n   * GET an object BRAND by StationsEnum\n   *\n   * @param {StationsEnum} station\n   * @return {*}  {QueryRef<Brand>}\n   * @memberof RadioService\n   */\n  private getBrand(station: StationsEnum): QueryRef<Brand> {\n    const GET_BRAND = gql`\n      query GetBrand($id: StationsEnum!) {\n        brand(id: $id) {\n          id\n          title\n          baseline\n          description\n          websiteUrl\n          liveStream\n          localRadios {\n            id\n            title\n            description\n            liveStream\n          }\n          webRadios {\n            id\n            title\n            description\n            liveStream\n          }\n        }\n      }\n    `;\n    return this.apollo.watchQuery<any>({\n      query: GET_BRAND,\n      variables: {id: station}\n    });\n  }\n\n  /**\n   * GET an object GRID by StationsEnum\n   *\n   * @private\n   * @param {StationsEnum} station\n   * @return {*}  {QueryRef<Grid>}\n   * @memberof RadioService\n   */\n  private getGrid(station: StationsEnum): QueryRef<Grid> {\n    const end = Math.round(new Date().getTime() / 1000);\n    const start = end - 3600; // il y a 1 heure\n    const GET_GRID = gql`\n      query GetGrid($start: Int!, $end: Int!, $station: StationsEnum!) {\n        grid(start: $start, end: $end, station: $station, includeTracks: true) {\n          ... on TrackStep {\n            start\n            end\n            __typename\n            track {\n              title\n              performers\n            }\n          }\n          ... on DiffusionStep {\n            start\n            end\n            __typename\n            diffusion {\n              title\n              standFirst\n            }\n          }\n          ... on BlankStep {\n            start\n            end\n            __typename\n            title\n          }\n        }\n      }\n    `;\n    return this.apollo.watchQuery<any>({\n      query: GET_GRID,\n      variables: {start, end, station}\n    });\n  }\n\n  /**\n   * GET observable of GRID\n   *\n   * @param {StationsEnum} station\n   * @return {*}  {Observable<Grid>}\n   * @memberof RadioService\n   */\n  public subscribeGrid(station: StationsEnum): Observable<Grid> {\n    return this.getGrid(station).valueChanges.pipe(\n      map((result: ApolloQueryResult<Grid>) => result.data));\n  }\n\n  /**\n   * GET observable of BRAND\n   *\n   * @param {StationsEnum} station\n   * @return {*}  {Observable<Brand>}\n   * @memberof RadioService\n   */\n  public subscribeBrand(station: StationsEnum): Observable<Brand> {\n    return this.getBrand(station).valueChanges.pipe(map((result: ApolloQueryResult<Brand>) => result.data));\n  }\n\n  /**\n   * GET observable of LIVE\n   *\n   * @param {StationsEnum} station\n   * @return {*}  {Observable<Live>}\n   * @memberof RadioService\n   */\n  public subscribeLive(station: StationsEnum): Observable<Live> {\n    return this.getLive(station).valueChanges.pipe(map((result: ApolloQueryResult<Live>) => result.data));\n  }\n}","import { Component, Input, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-star-rating',\n  templateUrl: './star-rating.component.html',\n  styleUrls: ['./star-rating.component.scss']\n})\nexport class StarRatingComponent {\n\n  @Input('rating') rating: number;\n  @Input() ratingArr: number[] = [0,1,2,3,4];\n  @Output() ratingUpdated = new EventEmitter();\n\n  constructor() {\n  }\n\n  onClick(rating:number) {    \n    this.rating = rating;\n    this.ratingUpdated.emit(rating);\n  }\n\n  showIcon(index:number) {\n    if (this.rating >= index + 1) {\n      return 'star';\n    } else {\n      return 'star_border';\n    }\n  }\n\n}\n\n\n\n","<button mat-icon-button\n*ngFor=\"let ratingId of ratingArr;index as i\"\n(click)=\"onClick(i+1)\"\n[matTooltip]=\"i+1\"\nmatTooltipPosition=\"above\">\n    <mat-icon>\n      {{showIcon(i)}}\n    </mat-icon>\n  </button>\n\n  ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment.prod';\nimport { QueryGAPI } from '../models/queryGAPI.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  private url: string = environment.urlApiYoutube;\n  private params = {\n    q: null,\n    order: null,\n    maxResults: 12,\n    key: environment.youtubeToken,\n    part: \"snippet\",\n    type: \"video\"\n};\n\n  constructor(private http: HttpClient) { }\n\n  getVideos(query: QueryGAPI): Observable<any> {\n    this.params.q = encodeURI(query.q);\n    this.params.order = query.order;\n    this.params.maxResults = query.maxResults;\n    let endPoint = `${this.url}/youtube/v3/search?`;\n    Object.keys(this.params).forEach(key => endPoint += \"&\" + key + \"=\" + this.params[key]);\n   \n    return this.http.get(endPoint)\n      .pipe(\n        map((response: any) => response.items)\n      );\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment.prod';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class VideoService {\n\n    private URL_BACKEND: string = environment.urlBack;\n\n    constructor(private http: HttpClient) { }\n\n    createVideo(data: any): Observable<any> {\n        return this.http.post(this.URL_BACKEND, data.video, { responseType: 'json' });\n    }\n\n    updateVideo(data: any): Observable<any> {\n        return this.http.put(this.URL_BACKEND + '/' + data.video.videoId, data.video,  { responseType: 'json' });\n    }\n\n    findAll(): Observable<any> {\n        return this.http.get(this.URL_BACKEND, { responseType: 'json' });\n    }\n\n    findByCategorie(categorie: string): Observable<any> {\n        return this.http.get(this.URL_BACKEND + \"/filtre/\" + categorie, { responseType: 'json' });\n    }\n\n    deleteVideo(data: any): Observable<any> {\n        return this.http.delete(this.URL_BACKEND + '/' + data.video.videoId, { responseType: 'json' });\n    }\n\n}\n\n\n","import { ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { Preference } from 'src/app/models/preference.interface';\nimport { VideoService } from 'src/app/services/video.service';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n\n  @ViewChild('drawer') public drawer;\n  @ViewChild('box') public box;\n  showInputSearch: boolean = false;\n  categories: any = [];\n\n  constructor(private router: Router, private videoService: VideoService) { }\n\n  ngOnInit(): void {\n    this.getCategorie();\n  }\n\n  getCategorie() {\n    this.videoService.findAll().pipe(take(1)).subscribe(array => {\n      this.categories = new Set(array.map(item => item.categorie));\n    })\n  }\n\n  showTable(categorie: string) {\n    if (this.drawer.opened) {\n      this.drawer.close();\n    }\n    this.router.navigateByUrl(`table/${categorie}`);\n  }\n\n  onEnter(value: string) {\n    if (value) this.router.navigateByUrl(`list/${value}`);\n  }\n\n  toogleInput() {\n    this.showInputSearch = !this.showInputSearch;\n    if (this.drawer.opened) {\n      this.drawer.close();\n    }\n    if (this.box !== undefined) {\n      if (this.box.nativeElement.value !== \"\") {\n        this.onEnter(this.box.nativeElement.value);\n        this.box.nativeElement.value = \"\"\n      }\n    }\n  }\n\n\n}\n","\n\n<mat-toolbar color=\"primary\" class=\"mat-toolbar-example\">\n  <img/>\n\n  <span class=\"example-spacer\"></span>\n\n  <app-radio-player #playerComponent></app-radio-player>\n\n  <span class=\"example-spacer\"></span>\n\n  <div *ngIf=\"showInputSearch\" class=\"input\">\n    <input #box (keyup.enter)=\"onEnter(box.value)\" matInput name=\"q\">\n  </div>\n\n  <button type=\"button\" mat-icon-button (click)=\"toogleInput(); playerComponent.toggleWindowDesktop()\">\n    <mat-icon>search</mat-icon>\n  </button>\n\n\n  <button mat-icon-button [matMenuTriggerFor]=\"belowMenu\">\n    <mat-icon>list</mat-icon>\n  </button>\n<!--   <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item routerLink=\"table\" (click)=\"drawer.close()\" >Toute catégorie confondue</button>\n    <button mat-menu-item *ngFor=\"let categorie of categories\" [value]=\"categorie\" (click)=\"showTable(categorie)\" >{{categorie}}</button>\n  </mat-menu> -->\n\n  <mat-menu #belowMenu=\"matMenu\" yPosition=\"below\">\n    <ng-container *ngIf=\"categories\">\n    <mat-selection-list #list [multiple]=\"false\" (selectionChange)=\"showTable(list.selectedOptions.selected[0]?.value)\">\n      <mat-list-option routerLink=\"table/all\" (click)=\"drawer.close()\">Toute catégorie confondue</mat-list-option>\n      <mat-list-option *ngFor=\"let categorie of categories\" [value]=\"categorie\">\n        {{categorie}}\n      </mat-list-option>\n    </mat-selection-list>\n  </ng-container>\n  </mat-menu>\n\n  <button mat-icon-button (click)=\"drawer.toggle()\">\n    <mat-icon>settings</mat-icon>\n  </button>\n\n</mat-toolbar>\n\n\n<mat-drawer-container class=\"drawer-container\">\n  <mat-drawer #drawer class=\"drawer\">\n    <app-preference></app-preference>\n  </mat-drawer>\n  <mat-drawer-content class=\"drawer-content\">\n    <router-outlet></router-outlet>\n  </mat-drawer-content>\n</mat-drawer-container>\n\n\n\n\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {Preference} from '../../models/preference.interface';\nimport {PreferenceService} from 'src/app/services/preference.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {ToolbarComponent} from '../toolbar/toolbar.component';\nimport {StationsEnum} from 'src/app/enums/radioFrance.enum';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {DestroyService} from 'src/app/services/destroy.service';\n\n@Component({\n  selector: 'app-preference',\n  templateUrl: './preference.component.html',\n  styleUrls: ['./preference.component.scss']\n})\nexport class PreferenceComponent implements OnInit {\n  public stations: string[] = Object.values(StationsEnum);\n  public stationsk: string[] = Object.keys(StationsEnum);\n  public preference: Preference;\n\n  constructor(\n    private preferenceService: PreferenceService,\n    private snackBar: MatSnackBar,\n    private toolbar: ToolbarComponent,\n    private destroy$: DestroyService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadPref();\n  }\n\n  public loadPref(): void {\n    this.preferenceService.getPreference$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((preference: Preference) => (this.preference = preference));\n  }\n\n  public savePref(): void {\n    this.preferenceService\n      .update(this.preference)\n      .pipe(take(1))\n      .subscribe(res => {\n        this.snackBar.open('Préférence id: ' + res, 'Enregistré', {duration: 2000});\n        this.toolbar.drawer.close();\n      });\n  }\n\n  public switchDiscogs(): void {\n    this.preference.switchDiscogs = !this.preference.switchDiscogs;\n  }\n\n  public switchWikipedia(): void {\n    this.preference.switchWikipedia = !this.preference.switchWikipedia;\n  }\n\n  public switchYoutube(): void {\n    this.preference.switchYoutube = !this.preference.switchYoutube;\n  }\n}\n","<div class=\"container\">\n\n    <mat-list *ngIf=\"preference\">\n        <h2>Paramètres</h2>\n        <mat-divider></mat-divider>\n        <!-- Paramètres RADIO FRANCE -->\n        <mat-list-item>\n            <img class=\"logo-large\" alt=\"logo radio france\" src='../../../assets/Logo-radio-france.svg' />\n        </mat-list-item>\n            <mat-form-field *ngIf=\"preference\">\n                <mat-select [(ngModel)]=\"preference.stationRadioFrance\">\n                    <mat-option *ngFor=\"let station of stations\" [value]=\"station\">{{station}}</mat-option>\n                </mat-select>\n                <mat-label>Sélection station</mat-label>\n            </mat-form-field>\n        <mat-divider></mat-divider>\n        <!-- Paramètres DISCOGS -->\n        <mat-list-item>\n            <img class=\"logo\" alt=\"logo Discogs\" src='../../../assets/discogs vinyl record mark.svg' />\n            Recherche Discogs\n        </mat-list-item>\n        <div class=\"row\">\n            <mat-slide-toggle [(ngModel)]=\"preference.switchDiscogs\" (toggleChange)=\"switchDiscogs()\">Discogs\n            </mat-slide-toggle>\n        </div>\n            <mat-form-field>\n                <mat-label>Resultat Max</mat-label>\n                <input matInput type=\"number\" min=\"1\" max=\"100\" name=\"maxResults\"\n                    [(ngModel)]=\"preference.maxResultsDiscogs\">\n            </mat-form-field>\n        <mat-divider></mat-divider>\n        <!-- Paramètres WIKIPEDIA -->\n        <mat-list-item>\n            <img class=\"logo\" alt=\"logo Discogs\" src='../../../assets/Wiki.svg' />\n            Recherche Wikipedia\n        </mat-list-item>\n        <div class=\"row\">\n            <mat-slide-toggle [(ngModel)]=\"preference.switchWikipedia\" (toggleChange)=\"switchWikipedia()\">\n                Wikipedia</mat-slide-toggle>\n        </div>\n        <mat-divider></mat-divider>\n        <!-- Paramètres YOUTUBE -->\n        <mat-list-item>\n            <img class=\"logo\" alt=\"logo Discogs\" src='../../../assets/YouTube_full-color_icon_(2017).svg' />\n            Recherche Youtube\n        </mat-list-item>\n        <div class=\"row\">\n            <mat-slide-toggle [(ngModel)]=\"preference.switchYoutube\" (toggleChange)=\"switchYoutube()\">Youtube\n            </mat-slide-toggle>\n        </div>\n            <mat-form-field>\n                <mat-label>Resultat Max</mat-label>\n                <input matInput type=\"number\" min=\"1\" max=\"36\" name=\"maxResults\"\n                    [(ngModel)]=\"preference.maxResultsYoutube\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-select name=\"order\" [(ngModel)]=\"preference.orderYoutube\">\n                    <mat-option value=\"DATE\">Date</mat-option>\n                    <mat-option value=\"RATING\">Rating</mat-option>\n                    <mat-option value=\"RELEVANCE\">Relevance (default)</mat-option>\n                    <mat-option value=\"TITLE\">Title</mat-option>\n                    <mat-option value=\"VIDEOCOUNT\">VideoCount</mat-option>\n                    <mat-option value=\"VIEWCOUNT\">ViewCount</mat-option>\n                </mat-select>\n                <mat-label>Trier par</mat-label>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Grille d'affichage : </mat-label>\n                <input matInput type=\"number\" min=\"1\" max=\"8\" name=\"grille d'affichage\"\n                    [(ngModel)]=\"preference.matSliderValue\">\n            </mat-form-field>\n        <mat-divider></mat-divider>\n    </mat-list>\n    <div class=\"group-button-row\">\n        <button type=\"button\" mat-stroked-button color=\"primary\" class=\"button-reload\" (click)=\"loadPref()\">\n            <mat-icon>refresh</mat-icon>\n        </button>\n        <button type=\"button\" mat-stroked-button color=\"accent\" class=\"button-save\" (click)=\"savePref()\">\n            <mat-icon>save</mat-icon>\n        </button>\n    </div>\n</div>","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { AfterViewInit, Component, ComponentFactoryResolver, ComponentRef, ElementRef, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Title } from \"@angular/platform-browser\";\nimport { Router } from '@angular/router';\nimport { interval, Observable, Subject, Subscription, timer } from 'rxjs';\nimport { startWith, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { StationsEnum } from 'src/app/enums/radioFrance.enum';\nimport { Preference } from 'src/app/models/preference.interface';\nimport { Brand, BrandDTO, Grid, SongDTO } from 'src/app/models/radioFrance.interface';\nimport { DestroyService } from 'src/app/services/destroy.service';\nimport { PreferenceService } from 'src/app/services/preference.service';\nimport { RadioTransformService } from 'src/app/services/radio-transform.service';\nimport { RadioUtilService } from 'src/app/services/radio-util.service';\nimport { RadioService } from 'src/app/services/radio.service';\nimport { AudioElementComponent } from '../audio-element/audio-element.component';\n\n@Component({\n  selector: 'app-radio-player',\n  templateUrl: './radio-player.component.html',\n  styleUrls: ['./radio-player.component.scss']\n})\nexport class RadioPlayerComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('track') trackElt: ElementRef<HTMLElement>;\n  @ViewChild('player') player: ElementRef;\n  @ViewChild('audioSource', {read: ViewContainerRef}) audioSource!: ViewContainerRef;\n  public brandDTO: BrandDTO = {\n    value: 'https://icecast.radiofrance.fr/fip-midfi.mp3?id=radiofrance', //\"https://icecast.radiofrance.fr/fip-midfi.mp3?id=openapi\n    viewValue: 'FIP'\n  };\n  private station: StationsEnum;\n  public song: SongDTO;\n  public grid: SongDTO[];\n  public secondsLeft = 0;\n  public minutesLeft = 0;\n  private msPerSecond = 1000;\n  private msPerMinute = 60 * 1000;\n  private msPerHour = 60 * 60 * 1000;\n  public isMobile: boolean;\n  public playerIsOpen = false;\n\n  private ticker$ = new Subscription;\n\n  constructor(\n    private radio: RadioService,\n    private router: Router,\n    private preferenceService: PreferenceService,\n    private destroy$: DestroyService,\n    private breakpointObserver: BreakpointObserver,\n    private transform: RadioTransformService,\n    private util: RadioUtilService,\n    private titleService:Title,\n    private resolver: ComponentFactoryResolver\n  ) {}\n\n  /**\n   * SUBSCRIBE width of screen\n   *\n   * @memberof RadioPlayerComponent\n   */\n  ngOnInit(): void {\n    this.breakpointObserver\n      .observe(Breakpoints.XSmall)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(result => (this.isMobile = result.matches));\n  }\n\n  /**\n   * Initialize data\n   *\n   * @memberof RadioPlayerComponent\n   */\n  ngAfterViewInit(): void {\n    this.initializeData();\n  }\n\n  /**\n   * SUBSCRIBE preference.station to initialize & update data\n   *\n   * @private\n   * @memberof RadioPlayerComponent\n   */\n  private initializeData(): void {\n    this.preferenceService.getPreference$.pipe(takeUntil(this.destroy$)).subscribe((preference: Preference) => {\n      if (preference) {\n        this.station = this.transform.checkPref(preference);\n        this.getBrand();\n        this.getLive(0);\n      }\n    });\n  }\n\n  /**\n   * GET stream URL of station\n   *\n   * @private\n   * @memberof RadioPlayerComponent\n   */\n  private getBrand(): void {\n    this.radio\n      .subscribeBrand(this.station)\n      .pipe(take(1))\n      .subscribe((brand: Brand) => {\n        this.brandDTO = this.transform.brandMapper(brand);\n        this.setAudio();\n      });\n  }\n\n  /**\n   * GET history of station\n   *\n   * @private\n   * @memberof RadioPlayerComponent\n   */\n  private getGrid(): void {\n    this.radio\n      .subscribeGrid(this.station)\n      .pipe(take(1))\n      .subscribe((grid: Grid) => {\n        (this.grid = this.transform.gridMapper(grid.grid))\n      });\n  }\n\n  /**\n   * GET current track of station\n   *\n   * @private\n   * @param {number} delay\n   * @memberof RadioPlayerComponent\n   */\n  private getLive(delay: number): void {\n    timer(delay).subscribe(async () => {\n      const result = await this.radio.getLive(this.station).refetch();\n      this.song = result.data.live ? this.transform.factory(result.data) : null;\n      if (this.song) {\n        this.titleService.setTitle([this.song.artist, this.song.title].join(' '));\n        this.setTicker(this.song);\n        this.setAnimation(this.song);\n        this.getGrid();\n        this.getLive(this.util.delay(this.song.end) + 1000);\n      } else {\n        this.getLive(2000);\n      }\n    });\n  }\n\n  /**\n   * SET ticker of current track\n   *\n   * @private\n   * @memberof RadioPlayerComponent\n   */\n  private setTicker(song: SongDTO): void {\n    this.ticker$.unsubscribe();\n    this.ticker$ = interval(1000).subscribe(() => {\n      const timeDifference = song.end * 1000 - new Date().getTime();\n      if (timeDifference > 0) {\n        this.minutesLeft = Math.floor((timeDifference % this.msPerHour) / this.msPerMinute);\n        this.secondsLeft = Math.floor((timeDifference % this.msPerMinute) / this.msPerSecond);\n      }\n    });\n  }\n\n  /**\n   * SET text animation \n   *\n   * @private\n   * @memberof RadioPlayerComponent\n   */\n  private setAnimation(song: SongDTO): void {\n    timer(500).subscribe(() => {\n      this.util.setAnimation(song.artist, this.trackElt.nativeElement.children[0]);\n      this.util.setAnimation(song.title, this.trackElt.nativeElement.children[1]);\n    });\n  }\n\n  /**\n   * onClick icon SEARCH request\n   *\n   * @memberof RadioPlayerComponent\n   */\n  public onSearch(): void {\n    if (this.song.artist) this.router.navigateByUrl(`list/${this.song.artist}`);\n  }\n\n  /**\n   * onClick one item into popover history so launch search request\n   *\n   * @param {SongDTO} song\n   * @memberof RadioPlayerComponent\n   */\n  public searchByHistory(song: SongDTO): void {\n    this.router.navigateByUrl(`list/${song.artist}`);\n  }\n\n  /**\n   * method shared with toolbar (when toggle input search, so player is hidden)\n   *\n   * @memberof RadioPlayerComponent\n   */\n  public toggleWindowDesktop(): void {\n    if (!this.isMobile && this.song.title) {\n      const widthOfWindow = this.player.nativeElement.style.width;\n      this.player.nativeElement.style.width = widthOfWindow === '420px' ? '102px' : '420px';\n    }\n  }\n\n  /**\n   * createComponent audio HTMLElement to set src \n   *\n   * @private\n   * @memberof RadioPlayerComponent\n   */\n  private setAudio(): void {\n    this.secondsLeft = 0;\n    this.minutesLeft = 0;\n    this.audioSource.clear();\n    const factory = this.resolver.resolveComponentFactory(AudioElementComponent);\n    const viewRef: ComponentRef<AudioElementComponent> = this.audioSource.createComponent<AudioElementComponent>(factory);\n    viewRef.instance.src = this.brandDTO.value;\n  }\n\n}\n","<ng-container *ngIf=\"!isMobile; else MobileView\">\n  <div #player class=\"player-desktop\" [ngStyle]=\"{width: song ? '420px;' : '102px;'}\">\n\n    <ng-container #audioSource></ng-container>\n\n    <ng-container *ngIf=\"song && player.style.width === '420px'\">\n      <button mat-icon-button color=\"accent\" [matMenuTriggerFor]=\"belowMenu\"><mat-icon>history</mat-icon></button>\n      <mat-menu #belowMenu=\"matMenu\" yPosition=\"below\">\n        <ng-container *ngIf=\"grid\">\n          <mat-selection-list\n            #songs\n            [multiple]=\"false\"\n            (selectionChange)=\"searchByHistory(songs.selectedOptions.selected[0]?.value)\"\n          >\n            <mat-list-option disabled>TITRES DIFFUSÉS (dans la dernière heure) :</mat-list-option>\n            <mat-list-option *ngFor=\"let song of grid\" [value]=\"song\">\n              {{ song.start * 1000 | date: 'HH:mm' }} - {{ song.title ? song.title : '' }} -\n              {{ song.artist }}\n            </mat-list-option>\n          </mat-selection-list>\n        </ng-container>\n      </mat-menu>\n\n      <button (click)=\"onSearch()\" mat-icon-button color=\"accent\" aria-label=\"Example icon button with a bookmark icon\">\n        <mat-icon>search</mat-icon>\n      </button>\n\n      <div class=\"row\">\n        <p class=\"countdown\">{{ minutesLeft | number: '2.0' }} : {{ secondsLeft | number: '2.0' }}</p>\n        <div class=\"track-live\" #track>\n          <div class=\"performers\">{{ song.artist }}</div>\n          <div class=\"title\">{{ song.title ? song.title : '' }}</div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</ng-container>\n\n<ng-template #MobileView>\n  <ng-container>\n\n\n\n    <div #player class=\"player-mobile row\" [ngClass]=\"playerIsOpen ? 'open' : 'close'\">\n\n      <div class=\"row-center-center\">\n        <div class=\"col\">\n          <div class=\"radius-inverted bottom-right\"></div>\n          <div class=\"tab-icon row-center-center\">\n            <mat-icon (click)=\"playerIsOpen = !playerIsOpen\">chevron_left</mat-icon>\n          </div>\n          <div class=\"radius-inverted top-right\"></div>\n        </div>\n        <div class=\"tab-content\">\n\n          <div class=\"row-btn\">\n            <ng-container #audioSource></ng-container>\n\n            <div *ngIf=\"song\">\n  \n  \n              <button mat-icon-button color=\"accent\" [matMenuTriggerFor]=\"belowMenu\"><mat-icon>history</mat-icon></button>\n              <mat-menu #belowMenu=\"matMenu\" yPosition=\"below\">\n                <ng-container *ngIf=\"grid\">\n                  <mat-selection-list\n                    #songs\n                    [multiple]=\"false\"\n                    (selectionChange)=\"searchByHistory(songs.selectedOptions.selected[0]?.value)\"\n                  >\n                    <mat-list-option disabled>TITRES DIFFUSÉS (dans la dernière heure) :</mat-list-option>\n                    <mat-list-option *ngFor=\"let song of grid\" [value]=\"song\">\n                      {{ song.start * 1000 | date: 'HH:mm' }} - {{ song.title }} -\n                      {{ song.artist }}\n                    </mat-list-option>\n                  </mat-selection-list>\n                </ng-container>\n              </mat-menu>\n  \n              <button\n                (click)=\"onSearch()\"\n                mat-icon-button\n                color=\"accent\"\n                aria-label=\"Example icon button with a bookmark icon\"\n              >\n                <mat-icon>search</mat-icon>\n              </button>\n  \n            </div>\n          </div>\n\n\n          <ng-container *ngIf=\"song\">\n\n            <div class=\"row-txt\">\n              <span class=\"station\">{{ brandDTO.viewValue }}</span>\n            </div>\n            <div class=\"row-txt\">\n              <p class=\"countdown\">{{ minutesLeft | number: '2.0' }} : {{ secondsLeft | number: '2.0' }}</p>\n              <div class=\"track-live\" #track>\n                <div class=\"performers\">{{ song.artist }}</div>\n                <div class=\"title\">{{ song.title }}</div>\n              </div>\n            </div>\n          </ng-container>\n  \n        </div>\n      </div>\n\n\n\n\n    </div>\n\n    <div class=\"backdrop\" (click)=\"playerIsOpen = !playerIsOpen\" [ngClass]=\"playerIsOpen ? 'open' : 'close'\"></div>\n  </ng-container>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { StationsEnum } from '../enums/radioFrance.enum';\nimport { Preference } from '../models/preference.interface';\nimport { BlankStep, Brand, BrandDTO, DiffusionStep, Live, SongDTO, Step, StepEnum, TrackStep } from '../models/radioFrance.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RadioTransformService {\n\n  constructor() { }\n\n  public factory(data: Live): SongDTO {\n    if (data.live.song) {\n      return this.checkInstance(data.live.song);\n    } else if (data.live.program) {\n      return this.checkInstance(data.live.program);\n    } else if (data.live.show) {\n      return this.checkInstance(data.live.show);\n    }\n  }\n\n  public checkInstance(step: Step): SongDTO {\n    if (step.__typename === StepEnum.TrackStep) {\n      return this.trackStepToPlayer(step as TrackStep);\n    } else if (step.__typename === StepEnum.DiffusionStep) {\n      return this.diffusionStepToPlayer(step as DiffusionStep);\n    } else if (step.__typename === StepEnum.BlankStep) {\n      return this.blanckStepToPlayer(step as BlankStep);\n    }\n  }\n\n  private diffusionStepToPlayer(step: DiffusionStep): SongDTO {\n    return {\n      title: step.diffusion.title,\n      artist: step.diffusion.standFirst,\n      start: step.start,\n      end: step.end,\n    }\n  }\n\n  private blanckStepToPlayer(step: BlankStep): SongDTO {\n    return {\n      title: step.title,\n      artist: null,\n      start: step.start,\n      end: step.end,\n    }\n  }\n\n  private trackStepToPlayer(step: TrackStep): SongDTO {\n    return {\n      title: step.track.title,\n      artist: step.track.performers.join(' & '),\n      start: step.start,\n      end: step.end,\n    }\n  }\n\n  public gridMapper(grid: TrackStep[] | BlankStep[] | DiffusionStep[]): SongDTO[] {\n    let songs: SongDTO[] = [];\n    grid.forEach((song: TrackStep | BlankStep | DiffusionStep) => songs.push(this.checkInstance(song)));\n    return songs.slice().reverse();\n  }\n\n  public brandMapper(brand: Brand): BrandDTO {\n    let stream: string = '';\n    if (brand.brand.id === 'FRANCEBLEU') {\n      stream = brand.brand.localRadios.find( localRadio => localRadio.id === \"FRANCEBLEU_HERAULT\").liveStream\n    } else {\n      stream = brand.brand.liveStream\n    }\n    return {\n      value: stream,\n      viewValue: brand.brand.title,\n    }\n  }\n\n  public checkPref(preference: Preference): StationsEnum {\n    return Object.values(StationsEnum)\n          .filter(val => val === preference.stationRadioFrance)\n          .reduce(res => StationsEnum[res[0]]);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SearchListComponent } from './components/search-list/search-list.component';\nimport { TableComponent } from './components/table/table.component';\n\nconst routes: Routes = [\n  { path: 'table/:categorie', component: TableComponent },\n  { path: 'list/:q', component: SearchListComponent },\n  { path: '', redirectTo: 'table/all', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { NewsRss } from 'src/app/models/news-rss.interface';\nimport { DestroyService } from 'src/app/services/destroy.service';\nimport { RssService } from 'src/app/services/rss.service';\n\n@Component({\n  selector: 'app-rss-flux',\n  templateUrl: './rss-flux.component.html',\n  styleUrls: ['./rss-flux.component.scss']\n})\nexport class RssFluxComponent implements OnInit {\n  private rssUrl: string[] = [\n    'https://www.developpez.com/index/rss',\n    'https://www.leprogres.fr/rss',\n    'https://www.leprogres.fr/france-monde/rss',\n    'http://www.dna.fr/une-region/rss',\n    'http://www.ledauphine.com/actualite/a-la-une/rss'\n  ];\n  public rssThread: string = '';\n  private counter: number = 0;\n  @ViewChild('child') child: ElementRef;\n  private readingLoop: number = 1000;\n\n  constructor(private rss: RssService, private destroy$: DestroyService) {}\n\n  ngOnInit(): void {\n    this.fetchData(this.rssUrl[0]);\n  }\n\n  /**\n   * GET xml\n   *\n   * @private\n   * @memberof RssFluxComponent\n   */\n  private fetchData(url: string): void {\n    this.rss\n      .getRSSFeedData(url)\n      .pipe(take(1))\n      .subscribe(async data =>{\n        await this.transformData(data);\n      });\n  }\n\n  /**\n   * TRANSFORM xml to string\n   *\n   * @private\n   * @param {*} data\n   * @memberof RssFluxComponent\n   */\n  private async transformData(data: any) {\n    const result: NewsRss = await this.rss.parseRSS(data);\n    const items = result.rss.channel[0].item;\n    const counter = items.length;\n    this.rssThread = '';\n    for (const key in items) {\n      if (Object.prototype.hasOwnProperty.call(items, key)) {\n        const element = items[key].title[0];\n        this.rssThread += ` -- ${key}/${counter} : ${element}`;\n      }\n    }\n    this.readingLoop = this.rssThread.length * 100;\n    this.child.nativeElement.style.animation = `defilement-rtl ${\n      this.rssThread.length / 10\n    }s infinite linear`;\n    this.updateFeed();\n  }\n\n  /**\n   * UPDATE FEED RSS\n   *\n   * @private\n   * @memberof RssFluxComponent\n   */\n  private updateFeed(): void {\n    setTimeout(() => {\n      this.counter++;\n      this.fetchData(this.rssUrl[this.counter]);\n      if (this.counter > this.rssUrl.length) this.counter = 0;\n      this.counter++;\n    }, this.readingLoop);\n  }\n}\n","<div class=\"marquee-rtl\">\n  <!-- le contenu défilant -->\n  <div #child>{{ rssThread }}</div>\n</div>\n\n","export enum StepEnum {\n  DiffusionStep = 'DiffusionStep',\n  BlankStep = 'BlankStep',\n  TrackStep = 'TrackStep'\n}\nexport interface Live {\n  live: {\n    show: TrackStep | BlankStep | DiffusionStep;\n    program: TrackStep | BlankStep | DiffusionStep;\n    song: TrackStep;\n  };\n}\nexport interface Step {\n  id: string;\n  start: number;\n  end: number;\n  __typename: string;\n}\nexport interface TrackStep extends Step  {\n  id: string;\n  start: number;\n  end: number;\n  __typename: string;\n  track: {\n    id: string;\n    title: string;\n    albumTitle: string;\n    label: string;\n    mainArtists: string[];\n    authors: string[];\n    composers: string[];\n    performers: string[];\n    productionDate: number;\n    discNumber: number;\n    trackNumber: number;\n  }\n}\nexport interface BlankStep extends Step  {\n  id: string;\n  start: number;\n  end: number;\n  __typename: string;\n  title: string;\n  children: [TrackStep | BlankStep | DiffusionStep];\n}\nexport interface DiffusionStep extends Step {\n  id: string;\n  start: number;\n  end: number;\n  __typename: string;\n  children: TrackStep[] | BlankStep[] | DiffusionStep[];\n  diffusion: {\n    id: string;\n    title: string;\n    standFirst: string;\n    url: string;\n    published_date: string;\n    isStreamable: Boolean;\n    show: {\n      id: string;\n      title: string;\n      url: string;\n      standFirst: string;\n      podcast: {\n        rss: string;\n        itunes: string;\n      };\n    };\n  };\n}\nexport interface Brand {\n  brand: {\n    id: string;\n    title: string;\n    baseline: string;\n    description: string;\n    websiteUrl: string;\n    liveStream: string;\n    localRadios: [\n      {\n        id: string;\n        title: string;\n        description: string;\n        liveStream: string;\n      }\n    ];\n    webRadios: [\n      {\n        id: string;\n        title: string;\n        description: string;\n        liveStream: string;\n      }\n    ];\n  };\n}\nexport interface Grid {\n  grid: TrackStep[] | BlankStep[] | DiffusionStep[];\n}\nexport interface SongDTO {\n  title: string;\n  artist: string;\n  start: number;\n  end: number;\n}\nexport interface BrandDTO {\n  value: string;\n  viewValue: string;\n}\n\n","import {ElementRef, Injectable} from '@angular/core';\nimport {SongDTO} from '../models/radioFrance.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RadioUtilService {\n  constructor() {}\n\n  public setAnimation(string: string, element: Element): void {\n    const stringWidth = this.mesureTxt(string);\n    const animation = stringWidth > element.clientWidth ? `animation: defilement ${string.length / 2}s infinite linear;` : 'animation: none;';\n    const width = `width: ${stringWidth}px;`;\n    element.setAttribute('style', width + animation);\n  }\n\n  /**\n   * Calculate lenght into pixel of string\n   *\n   * @private\n   * @param {string} str\n   * @return {*}  {number}\n   * @memberof RadioUtilService\n   */\n  private mesureTxt(str: string): number {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    ctx.font = '16px \"Helvetica Neue\"';\n    const strWidth = ctx.measureText(str).width\n    return Math.floor(strWidth);\n  }\n\n  /**\n   * Get delay between end & now\n   *\n   * @param {number} end\n   * @return {*}  {number}\n   * @memberof RadioUtilService\n   */\n  public delay(end: number): number {\n    const now: number = Math.floor(new Date().getTime());\n    return Math.abs(end * 1000 - now);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}