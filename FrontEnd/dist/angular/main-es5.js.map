{"version":3,"sources":["webpack:///src/app/services/preference.service.ts","webpack:///src/app/services/rss.service.ts","webpack:///src/app/modules/material.module.ts","webpack:///src/app/graphql.module.ts","webpack:///src/app/services/wikipedia.service.ts","webpack:///src/app/components/table/table.component.ts","webpack:///src/app/components/table/table.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/components/watch/watch.component.ts","webpack:///src/app/components/watch/watch.component.html","webpack:///src/app/components/bottom-sheet/bottom-sheet.component.ts","webpack:///src/app/components/bottom-sheet/bottom-sheet.component.html","webpack:///src/app/components/search-list/search-list.component.ts","webpack:///src/app/components/search-list/search-list.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/enums/radioFrance.enum.ts","webpack:///src/app/services/destroy.service.ts","webpack:///src/app/components/audio-element/audio-element.component.ts","webpack:///src/app/components/audio-element/audio-element.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/services/discogs.service.ts","webpack:///src/environments/environment.prod.ts","webpack:///src/app/services/radio.service.ts","webpack:///src/app/services/audio.service.ts","webpack:///src/app/components/star-rating/star-rating.component.ts","webpack:///src/app/components/star-rating/star-rating.component.html","webpack:///src/app/services/search.service.ts","webpack:///src/app/services/video.service.ts","webpack:///src/app/components/toolbar/toolbar.component.ts","webpack:///src/app/components/toolbar/toolbar.component.html","webpack:///src/app/components/preference/preference.component.ts","webpack:///src/app/components/preference/preference.component.html","webpack:///src/app/directives/iframe-tracker.directive.ts","webpack:///src/app/components/radio-player/radio-player.component.html","webpack:///src/app/components/radio-player/radio-player.component.ts","webpack:///src/app/services/radio-transform.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/components/rss-flux/rss-flux.component.ts","webpack:///src/app/components/rss-flux/rss-flux.component.html","webpack:///src/app/models/radioFrance.interface.ts","webpack:///src/app/services/radio-util.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["PreferenceService","http","URL_BACKEND","urlBack","preference$","get","toPromise","then","preferences","setPreference","pipe","preference","result","post","put","asObservable","next","RssService","url","requestOptions","responseType","data","options","trim","explicitArray","parser","parseStringPromise","MaterialComponents","MaterialModule","uri","createApollo","httpLink","link","create","cache","GraphQLModule","provide","useFactory","deps","WikipediaService","params","origin","action","format","uselang","prop","titles","redirects","converttitles","exintro","explaintext","q","lang","encodeURI","Object","keys","forEach","key","TableComponent","dialog","_sanitizer","_bottomSheet","videoService","_snackBar","route","destroy$","ratingArr","dataSource","columnsToDisplay","h1","loading","refreshTable","subscribe","categorie","undefined","findAll","items","videos","length","findByCategorie","event","filterValue","target","value","filter","toLowerCase","element","index","rating","open","width","video","videoId","publishedAt","title","description","thumbnail","channelTitle","src","sanitized","bypassSecurityTrustResourceUrl","extractWiki","wiki","deleteVideo","item","duration","setTimeout","height","minHeight","environment","production","WatchComponent","audioService","categories","panelOpenState","setIsPlaying","onIframeClick","openBottomSheet","BottomSheetComponent","_bottomSheetRef","array","Set","map","dismiss","preventDefault","$event","updateVideo","inputElement","nativeElement","createVideo","SearchListComponent","discogsService","searchService","wikipediaService","preferenceService","queryDiscogs","per_page","token","artist","discogs","queryGAPI","maxResults","order","part","type","checkParam","getPreference$","keyword","factory","switchDiscogs","searchDiscogs","switchWikipedia","searchWikipedia","switchYoutube","searchYoutube","maxResultsDiscogs","getByArtistName","results","elt","thumb","year","style","join","label","slice","getWiki","i","query","pages","extract","maxResultsYoutube","orderYoutube","getVideos","id","Date","snippet","toLocaleDateString","decodeHTMLEntities","thumbnails","medium","text","entities","max","replace","RegExp","AppComponent","StationsEnum","DestroyService","subscriber","life$","complete","AudioElementComponent","isPlaying","audio","volume","getIsPlaying$","play","pause","direction","tooltip","show","hide","onTooglePlay","onVolume","initializeApp","pref","init","AppModule","multi","DiscogsService","urlApiDiscogs","discogsToken","endPoint","youtubeToken","urlApiYoutube","RadioService","apollo","station","GET_LIVE","watchQuery","variables","GET_BRAND","end","Math","round","getTime","start","GET_GRID","getGrid","valueChanges","getBrand","getLive","AudioService","isPlaying$","StarRatingComponent","ratingUpdated","emit","SearchService","response","VideoService","ToolbarComponent","router","showInputSearch","getCategorie","drawer","opened","close","navigateByUrl","box","onEnter","toogleInput","PreferenceComponent","snackBar","toolbar","stations","values","stationsk","loadPref","update","res","savePref","IframeTrackerDirective","el","renderer","iframeClick","listen","window","onWindowBlur","log","iframeMouseOver","resetFocusOnWindow","focus","message","debug","console","RadioPlayerComponent","radio","breakpointObserver","transform","util","titleService","resolver","brandDTO","viewValue","secondsLeft","minutesLeft","msPerSecond","msPerMinute","msPerHour","playerIsOpen","ticker$","observe","XSmall","isMobile","matches","initializeData","checkPref","subscribeBrand","brand","brandMapper","setAudio","subscribeGrid","grid","gridMapper","delay","refetch","song","live","setTitle","setTicker","setAnimation","unsubscribe","timeDifference","floor","trackElt","children","widthOfWindow","player","audioSource","clear","resolveComponentFactory","viewRef","createComponent","instance","RadioTransformService","checkInstance","program","step","__typename","TrackStep","trackStepToPlayer","DiffusionStep","diffusionStepToPlayer","BlankStep","blanckStepToPlayer","diffusion","standFirst","track","performers","songs","push","reverse","stream","localRadios","find","localRadio","liveStream","val","stationRadioFrance","reduce","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","RssFluxComponent","rss","rssUrl","rssThread","counter","readingLoop","fetchData","getRSSFeedData","transformData","parseRSS","channel","prototype","hasOwnProperty","call","child","animation","updateFeed","StepEnum","RadioUtilService","string","stringWidth","mesureTxt","clientWidth","setAttribute","str","canvas","document","createElement","ctx","getContext","font","strWidth","measureText","now","abs","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {environment} from '../../environments/environment.prod';\nimport {Preference} from '../models/preference.interface';\nimport {concatMap, filter, map, tap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreferenceService {\n  private URL_BACKEND: string = environment.urlBack;\n  private preference$: BehaviorSubject<Preference> = new BehaviorSubject<Preference>(null);\n\n  constructor(private http: HttpClient) {}\n\n  public async init(): Promise<Preference> {\n    return this.http\n      .get<Preference[]>(`${this.URL_BACKEND}pref`)\n      .toPromise()\n      .then((preferences: Preference[]) => {\n        this.setPreference(preferences[0])\n        return preferences[0]\n      })\n  }\n\n  /**\n   * READ preference FROM database\n   *\n   * @return {*}  {Observable<Preference>}\n   * @memberof PreferenceService\n   */\n  public find(): Observable<Preference> {\n    return this.http.get<Preference[]>(`${this.URL_BACKEND}pref`).pipe(\n      map((preferences: Preference[]) => {\n        return preferences[0];\n      }),\n      tap((preference: Preference) => {\n        this.setPreference(preference);\n      })\n    );\n  }\n\n  /**\n   * CREATE preference into database\n   *\n   * @param {Preference} preference\n   * @return {*}  {Observable<Preference>}\n   * @memberof PreferenceService\n   */\n  public create(preference: Preference): Observable<Preference> {\n    const result = this.http.post<Preference>(`${this.URL_BACKEND}pref`, preference);\n    return result;\n  }\n\n  /**\n   * UPDATE preference into database\n   *\n   * @param {Preference} preference\n   * @return {*}  {Observable<string>}\n   * @memberof PreferenceService\n   */\n  public update(preference: Preference): Observable<string> {\n    const result = this.http.put<string>(`${this.URL_BACKEND}pref`, preference);\n    this.setPreference(preference);\n    return result;\n  }\n\n  /**\n   * GETTER Preference inside global app\n   *\n   * @readonly\n   * @type {Observable<Preference>}\n   * @memberof PreferenceService\n   */\n  public get getPreference$(): Observable<Preference> {\n    return this.preference$.asObservable();\n  }\n\n  /**\n   * SETTER Preference inside global app\n   *\n   * @param {Preference} preference\n   * @memberof PreferenceService\n   */\n  public setPreference(preference: Preference): void {\n    this.preference$.next(preference);\n  }\n}\n","import { HttpClient} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as xml2js from 'xml2js';\nimport { convertableToString, ParserOptions } from 'xml2js';\nimport { NewsRss } from '../models/news-rss.interface';\n\n// https://github.com/Leonidas-from-XIV/node-xml2js\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RssService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * FETCH URL\n   *\n   * @param {string} url\n   * @return {*}  {Observable<any>}\n   * @memberof RssService\n   */\n  public getRSSFeedData(url: string): Observable<any> {\n    const requestOptions: object = {\n      responseType: 'text'\n    };\n    return this.http.get<any>(url, requestOptions);\n  }\n\n  /**\n   * PARSE XML\n   *\n   * @param {convertableToString} data\n   * @return {*}  {Promise<any>}\n   * @memberof RssService\n   */\n  public async parseRSS(data: convertableToString): Promise<NewsRss> {\n    const options: ParserOptions = {\n      trim: true,  \n      explicitArray: true \n    }\n    const parser = new xml2js.Parser(options);\n    return await parser.parseStringPromise(data);\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDividerModule } from '@angular/material/divider';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\n\nconst MaterialComponents = [\n  MatSliderModule,\n  MatInputModule,\n  MatIconModule,\n  MatButtonModule,\n  MatDialogModule,\n  MatMenuModule,\n  MatCardModule,\n  MatGridListModule,\n  MatListModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatBottomSheetModule,\n  MatSnackBarModule,\n  MatExpansionModule,\n  MatSelectModule,\n  MatRadioModule,\n  MatTabsModule,\n  MatTableModule,\n  MatTooltipModule,\n  MatProgressSpinnerModule,\n  MatAutocompleteModule,\n  MatProgressBarModule,\n  MatBadgeModule,\n  MatChipsModule,\n  MatCheckboxModule,\n  MatSlideToggleModule,\n  MatDividerModule,\n  DragDropModule\n];\n\n@NgModule({\n  imports: [MaterialComponents],\n  exports: [MaterialComponents]\n})\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { ApolloClientOptions, InMemoryCache } from '@apollo/client/core';\nimport { APOLLO_OPTIONS } from 'apollo-angular';\nimport { HttpLink } from 'apollo-angular/http';\n\nconst uri = 'https://openapi.radiofrance.fr/v1/graphql?x-token=7cb5e04d-f108-4476-abc8-adf0b037284e'; // <-- add the URL of the GraphQL server here\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\n  return {\n    link: httpLink.create({uri}),\n    cache: new InMemoryCache()\n  };\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink]\n    }\n  ]\n})\nexport class GraphQLModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { QueryWikipedia } from '../models/queryWikipedia.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WikipediaService {\n\n    private params: QueryWikipedia = {\n        origin: \"*\",\n        action: \"query\",\n        format: \"json\",\n        uselang: \"user\",\n        prop: \"extracts\",\n        titles: null,\n        redirects: 1,\n        converttitles: 1,\n        exintro: 1,\n        explaintext: 1,\n    };\n\n    constructor(private http: HttpClient) { }\n\n    getWiki(q: string, lang: string): Observable<any> {\n        let url = `https://${lang}.wikipedia.org/w/api.php?`;\n        this.params.titles = encodeURI(q);\n        Object.keys(this.params).forEach(key => url += \"&\" + key + \"=\" + this.params[key]);\n        return this.http.get(url, { responseType: 'json' });\n    }\n\n\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { VideoGAPI } from 'src/app/models/videoGAPI.interface';\nimport { WatchComponent } from '../watch/watch.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { BottomSheetComponent } from '../bottom-sheet/bottom-sheet.component';\nimport { VideoService } from '../../services/video.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute } from '@angular/router';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { DestroyService } from 'src/app/services/destroy.service';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class TableComponent implements OnInit {\n\n  @Input() videos: VideoGAPI[];\n  ratingArr: number[] = [0, 1, 2, 3, 4];\n  dataSource = null;\n  columnsToDisplay = ['categorie', 'channelTitle', 'title', 'publishedAt', 'rating'];\n  expandedElement: VideoGAPI | null;\n  h1: string = null;\n  loading: boolean = false;\n\n  constructor(public dialog: MatDialog,\n    private _sanitizer: DomSanitizer,\n    private _bottomSheet: MatBottomSheet,\n    private videoService: VideoService,\n    private _snackBar: MatSnackBar,\n    private route: ActivatedRoute,\n    private destroy$: DestroyService\n    ) { }\n\n  ngOnInit(): void {\n    this.refreshTable();\n  }\n\n  refreshTable() {\n    this.loading = true\n    this.route.params.pipe(takeUntil(this.destroy$)).subscribe(params => {\n      if (params.categorie === 'all' || params.categorie === undefined) {\n        this.videoService.findAll().pipe(takeUntil(this.destroy$)).subscribe((items: any) => {\n          this.videos = items;\n          this.h1 = `(${items.length}) Vidéos - Toute catégorie confondue`;\n          this.dataSource = new MatTableDataSource(this.videos);\n          this.loading = false;\n        });\n      } else {\n        this.videoService.findByCategorie(params.categorie).pipe(takeUntil(this.destroy$)).subscribe((items: any) => {\n          this.videos = items;\n          this.h1 = `(${items.length}) Vidéos - Catégorie : ${params.categorie}`;\n          this.dataSource = new MatTableDataSource(this.videos);\n          this.loading = false;\n        });\n      }\n    \n  })\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  showIcon(element: VideoGAPI, index: number) {\n    if (element.rating >= index + 1) {\n      return 'star';\n    } else {\n      return 'star_border';\n    }\n  }\n\n  openDialog(element: VideoGAPI): void {\n    this.dialog.open(WatchComponent, {\n      width: '432px',\n      data: {\n        video: {\n          videoId: element.videoId,\n          publishedAt: element.publishedAt,\n          title: element.title,\n          description: element.description,\n          thumbnail: element.thumbnail,\n          channelTitle: element.channelTitle,\n          src: element.src,\n          sanitized: this._sanitizer.bypassSecurityTrustResourceUrl(element.src),\n          categorie: element.categorie,\n          extractWiki: element.extractWiki,\n          rating: element.rating\n        }\n      }\n    });\n  }\n\n  openBottomSheetCate(element: VideoGAPI): void {\n    let data = { video: element, categorie: true };\n    this._bottomSheet.open(BottomSheetComponent, { data: data });\n  }\n\n  openBottomSheetWiki(element: VideoGAPI): void {\n    let data = { video: element, wiki: true };\n    this._bottomSheet.open(BottomSheetComponent, { data: data });\n  }\n\n  delete(element: VideoGAPI): void {\n    let data = { video: element};\n    this.videoService.deleteVideo(data).subscribe(item => {\n      this._snackBar.open(data.video.title, \" supprimé.\", { duration: 5000, });\n      setTimeout( () => { this.refreshTable() }, 3000)\n    });\n  }\n}\n","\n<div *ngIf=\"loading\" class=\"spinner-container\">\n    <mat-spinner color=\"accent\"></mat-spinner>\n</div>\n\n<div *ngIf=\"!loading\" class=\"header\">\n    <div class=\"item-header\">\n        <div class=\"label-table\">\n            <mat-icon>queue_music</mat-icon>\n            <h1>{{h1}}</h1>\n        </div>\n        <mat-form-field>\n            <mat-label>Filtre</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Rock\" #input>\n        </mat-form-field>\n    </div>\n</div>\n\n<div *ngIf=\"!loading\" class=\"container\">\n    <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\">\n        <!-- Categorie Column -->\n        <ng-container matColumnDef=\"categorie\">\n            <th mat-header-cell *matHeaderCellDef>Categorie</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.categorie}}</td>\n        </ng-container>\n        <!-- Title Column -->\n        <ng-container matColumnDef=\"title\">\n            <th mat-header-cell *matHeaderCellDef>Titre</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.title}}</td>\n        </ng-container>\n        <!-- channelTitle Column -->\n        <ng-container matColumnDef=\"channelTitle\">\n            <th mat-header-cell *matHeaderCellDef>Chaine Youtube</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"hidden\">{{element.channelTitle}}</td>\n        </ng-container>\n        <!-- publishedAt Column -->\n        <ng-container matColumnDef=\"publishedAt\">\n            <th mat-header-cell *matHeaderCellDef>Date de publication</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"hidden\">{{element.publishedAt}}</td>\n        </ng-container>\n        <!-- Rating Column -->\n        <ng-container matColumnDef=\"rating\">\n            <th mat-header-cell *matHeaderCellDef>Classement</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"hidden\">\n                <mat-icon *ngFor=\"let ratingId of ratingArr;index as i\">\n                    {{showIcon(element,i)}}\n                </mat-icon>\n            </td>\n        </ng-container>\n        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n        <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n                <div class=\"detail-expanded\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                    <div class=\"detail-description\">\n                        <p><img class=\"thumbnail\" [src]=\"element.thumbnail\">\n                            <span class=\"detail-description-titre\"> Description : </span>\n                            {{element.description}}\n                        </p>\n                        <div class=\"goupe-boutton\">\n                            <button mat-icon-button color=\"accent\" (click)=\"openDialog(element)\">\n                                <mat-icon>play_circle_outline</mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" (click)=\"openBottomSheetCate(element)\">\n                                <mat-icon>edit</mat-icon>\n                            </button>\n                            <button mat-icon-button color=\"accent\" (click)=\"delete(element)\">\n                                <mat-icon>delete_outline</mat-icon>\n                            </button>\n                            <button *ngIf=\"element.extractWiki\" mat-icon-button color=\"accent\"\n                                (click)=\"openBottomSheetWiki(element)\">\n                                <img class=\"logo\" src=\"assets/Wiki.svg\" alt=\"logo Wikipedia\" />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </td>\n        </ng-container>\n\n\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky:'true'\" class=\"entete-fixe\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\"\n            [class.example-expanded-row]=\"expandedElement === element\"\n            (click)=\"expandedElement = expandedElement === element ? null : element\">\n        </tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n    </table>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Inject } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AudioService } from 'src/app/services/audio.service';\nimport { BottomSheetComponent } from '../bottom-sheet/bottom-sheet.component';\n\n@Component({\n  selector: 'app-watch',\n  templateUrl: './watch.component.html',\n  styleUrls: ['./watch.component.scss']\n})\nexport class WatchComponent {\n  selectedCategorie: string;\n  categories: any = [];\n  panelOpenState = false;\n  selectedValue: string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private _bottomSheet: MatBottomSheet,\n    private audioService: AudioService\n  ) {}\n\n  openBottomSheet(data: any): void {\n    this._bottomSheet.open(BottomSheetComponent, {data: data});\n  }\n\n  onIframeClick(): void {\n    this.audioService.setIsPlaying(false);\n  }\n}\n","<mat-dialog-content class=\"mat-typography\">\n  <h1 matTooltip=\"Titre\" matTooltipPosition=\"left\">{{ data.video.title }}</h1>\n  <mat-progress-bar mode=\"buffer\" color=\"primary\"></mat-progress-bar>\n  <h2 matTooltip=\"Chaine Youtube\" matTooltipPosition=\"left\">{{ data.video.channelTitle }}</h2>\n  <h3 matTooltip=\"Date de publication\" matTooltipPosition=\"left\">{{ data.video.publishedAt }}</h3>\n  <p><span class=\"label\"> Description : </span>{{ data.video.description }}</p>\n  <div class=\"container\">\n    <iframe appIframeTracker (iframeClick)=\"onIframeClick()\" class=\"responsive-iframe\" [src]=\"data.video.sanitized\" allowfullscreen frameborder=\"0\">\n    </iframe>\n  </div>\n  <button mat-raised-button color=\"accent\" (click)=\"openBottomSheet(data)\">\n    <mat-icon>settings</mat-icon>\n  </button>\n</mat-dialog-content>\n","import { Component, Inject, Input, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { VideoGAPI } from '../../models/videoGAPI.interface';\nimport { VideoService } from '../../services/video.service';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\n\n\n@Component({\n  selector: 'app-bottom-sheet',\n  templateUrl: './bottom-sheet.component.html',\n  styleUrls: ['./bottom-sheet.component.scss'],\n})\nexport class BottomSheetComponent implements OnInit {\n\n  @Input() videos: VideoGAPI[];\n  @Input() video: VideoGAPI;\n  @ViewChild('input') inputElement: ElementRef;\n  categories: any = [];\n  rating: number;\n\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n    private _snackBar: MatSnackBar,\n    private _bottomSheetRef: MatBottomSheetRef<BottomSheetComponent>,\n    private videoService: VideoService) { }\n\n\n  ngOnInit(): void {\n    this.rating = this.data.video.rating;\n    this.videoService.findAll().subscribe(array => {\n      this.categories = new Set(array.map(item => item.categorie));\n    })\n  }\n\n  openLink(event: MouseEvent): void {\n    this._bottomSheetRef.dismiss();\n    event.preventDefault();\n  }\n\n  updateVideo($event) {\n    this.data.video.rating = $event;\n    this.videoService.updateVideo(this.data).subscribe(item => {\n      this._snackBar.open(this.data.video.title + \" id:\" + item, \"Modifié\", { duration: 5000, });\n      this._bottomSheetRef.dismiss();\n    })\n  }\n\n  addVideo(data) {\n    data.video.rating = 1;\n    data.video.categorie = this.inputElement.nativeElement.value;\n    this.videoService.createVideo(data).subscribe(item => {\n      this._snackBar.open(data.video.title + \" id:\" + item, \"Ajouté\", { duration: 5000, });\n      this._bottomSheetRef.dismiss();\n    })\n  }\n\n}\n","<mat-nav-list>\n\n  <p *ngIf=\"!data.wiki && rating\">Modifier le classement : \n    <app-star-rating [rating]=\"rating\" (ratingUpdated)='updateVideo($event)'></app-star-rating>\n  </p>\n  <mat-accordion>\n    <mat-expansion-panel *ngIf=\"!data.wiki\" [expanded]=\"data.categorie === true\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>{{rating ? \"Changer de categorie : \" + data.video.categorie : \"Ajouter à mes Favoris\"}}\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <div class=\"item-container\">\n        <mat-form-field class=\"item\" appearance=\"fill\">\n          <mat-label>Catégories favorites existantes</mat-label>\n          <input #input matInput list=\"id-categorie\" [(ngModel)]=\"data.video.categorie\">\n          <datalist id=\"id-categorie\">\n            <option *ngFor=\"let categorie of categories\" [value]=\"categorie\">{{categorie}}</option>\n          </datalist>\n        </mat-form-field>\n        <button *ngIf=\"!rating\" class=\"item\" mat-raised-button color=\"accent\" (click)=\"addVideo(data)\">+</button>\n        <button *ngIf=\"rating\" class=\"item\" mat-raised-button color=\"accent\" (click)=\"updateVideo($event)\"><mat-icon>save</mat-icon></button>\n      </div>\n    </mat-expansion-panel>\n\n  </mat-accordion>\n\n  <mat-accordion>\n    <mat-expansion-panel *ngIf=\"!data.categorie && data.video.extractWiki\" [expanded]=\"data.wiki\">\n      <mat-expansion-panel-header>\n        <img  src=\"assets/Wikipedia.svg\" alt=\"logo Wikipedia\" width=\"100px\" />\n      </mat-expansion-panel-header>\n      {{data.video.extractWiki}}\n    </mat-expansion-panel>\n  </mat-accordion>\n\n</mat-nav-list>","import {Component, OnInit, AfterViewInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {ActivatedRoute, Params} from '@angular/router';\n// COMPONENT\nimport {WatchComponent} from '../watch/watch.component';\n// SERVICE\nimport {DiscogsService} from 'src/app/services/discogs.service';\nimport {SearchService} from 'src/app/services/search.service';\nimport {WikipediaService} from 'src/app/services/wikipedia.service';\nimport {PreferenceService} from 'src/app/services/preference.service';\n//INTERFACE\nimport {Preference} from 'src/app/models/preference.interface';\nimport {QueryGAPI} from '../../models/queryGAPI.interface';\nimport {VideoGAPI} from '../../models/videoGAPI.interface';\nimport {QueryDiscogs} from 'src/app/models/queryDiscogs.interface';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {DestroyService} from 'src/app/services/destroy.service';\nimport {combineLatest, forkJoin} from 'rxjs';\n\n@Component({\n  selector: 'app-search-list',\n  templateUrl: './search-list.component.html',\n  styleUrls: ['./search-list.component.scss']\n})\nexport class SearchListComponent implements OnInit, AfterViewInit {\n  loading: boolean = true;\n  keyword: string;\n  preference: Preference;\n  queryDiscogs: QueryDiscogs = {\n    q: null,\n    per_page: null,\n    token: null,\n    artist: null\n  };\n  discogs: any[] = [];\n  extractWiki: string = '';\n  queryGAPI: QueryGAPI = {\n    q: null,\n    maxResults: null,\n    order: null,\n    key: null,\n    part: null,\n    type: null\n  };\n  videos: VideoGAPI[] = [];\n\n  constructor(\n    public dialog: MatDialog,\n    private _sanitizer: DomSanitizer,\n    private route: ActivatedRoute,\n    private discogsService: DiscogsService,\n    private searchService: SearchService,\n    private wikipediaService: WikipediaService,\n    private preferenceService: PreferenceService,\n    private destroy$: DestroyService\n  ) {}\n\n  ngOnInit(): void {\n    this.checkParam();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.loading = false;\n    }, 3000);\n  }\n\n  checkParam() {\n    combineLatest([this.route.params, this.preferenceService.getPreference$])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([params, preference]) => {\n        this.keyword = params.q;\n        this.preference = preference;\n        this.factory();\n      });\n  }\n\n  factory() {\n    if (this.preference.switchDiscogs) {\n      this.searchDiscogs();\n    }\n    if (this.preference.switchWikipedia) {\n      this.searchWikipedia();\n    }\n    if (this.preference.switchYoutube) {\n      this.searchYoutube();\n    }\n  }\n\n  searchDiscogs() {\n    this.queryDiscogs.q = this.keyword;\n    this.queryDiscogs.per_page = this.preference.maxResultsDiscogs;\n    this.discogsService.getByArtistName(this.queryDiscogs).subscribe(result => {\n      this.discogs = result.results.map(elt => {\n        return {\n          title: elt.title,\n          thumb: elt.thumb,\n          year: elt.year,\n          style: elt.style.join(', '),\n          label: [...new Set(elt.label)].slice(0, 6).join(', '),\n          format: [...new Set(elt.format)].join(', ')\n        };\n      });\n    });\n  }\n\n  searchWikipedia() {\n    this.wikipediaService.getWiki(this.keyword, 'fr').subscribe(result => {\n      for (var i in result.query.pages) {\n        this.extractWiki = result.query.pages[i].extract;\n      }\n      if (this.extractWiki == '') {\n        this.wikipediaService.getWiki(this.keyword, 'en').subscribe(result => {\n          for (var i in result.query.pages) {\n            this.extractWiki = result.query.pages[i].extract;\n          }\n        });\n      }\n    });\n  }\n\n  searchYoutube() {\n    this.queryGAPI.q = this.keyword;\n    this.queryGAPI.maxResults = this.preference.maxResultsYoutube;\n    this.queryGAPI.order = this.preference.orderYoutube;\n    this.searchService.getVideos(this.queryGAPI).subscribe((items: any) => {\n      this.videos = items.map(item => {\n        return {\n          videoId: item.id.videoId,\n          publishedAt: new Date(item.snippet.publishedAt).toLocaleDateString(),\n          title: this.decodeHTMLEntities(item.snippet.title),\n          description: this.decodeHTMLEntities(item.snippet.description),\n          thumbnail: item.snippet.thumbnails.medium.url,\n          channelTitle: item.snippet.channelTitle,\n          src: `https://www.youtube.com/embed/${item.id.videoId}`,\n          discogs: this.discogs\n        };\n      });\n    });\n  }\n\n  openDialog(index: number) {\n    this.dialog.open(WatchComponent, {\n      width: '432px',\n      data: {\n        video: {\n          videoId: this.videos[index].videoId,\n          publishedAt: this.videos[index].publishedAt,\n          title: this.videos[index].title,\n          description: this.videos[index].description,\n          thumbnail: this.videos[index].thumbnail,\n          channelTitle: this.videos[index].channelTitle,\n          src: this.videos[index].src,\n          sanitized: this._sanitizer.bypassSecurityTrustResourceUrl(this.videos[index].src),\n          extractWiki: this.extractWiki\n        }\n      }\n    });\n  }\n\n  private decodeHTMLEntities(text: string) {\n    var entities = [\n      ['amp', '&'],\n      ['apos', \"'\"],\n      ['#x27', \"'\"],\n      ['#x2F', '/'],\n      ['#39', \"'\"],\n      ['#47', '/'],\n      ['lt', '<'],\n      ['gt', '>'],\n      ['nbsp', ' '],\n      ['quot', '\"']\n    ];\n\n    for (var i = 0, max = entities.length; i < max; ++i)\n      text = text.replace(new RegExp('&' + entities[i][0] + ';', 'g'), entities[i][1]);\n\n    return text;\n  }\n}\n","<div class=\"chip-container\" >\n  <mat-chip-list aria-label=\"Fish selection\" >\n    <mat-chip color=\"primary\" selected>Résultat de la recherche : {{keyword}}</mat-chip>\n  </mat-chip-list>\n</div>\n\n<div *ngIf=\"loading\" class=\"spinner-container\">\n  <mat-spinner color=\"accent\"></mat-spinner>\n</div>\n\n\n<div class=\"content-container\">\n<div *ngIf=\"discogs.length>0 && !loading\" class=\"carousel\">\n  <img class=\"logo\" alt=\"logo Discogs\" src='../../../assets/discogs-simplified.svg' />\n  <div class=\"margin-flow\">\n    <div class=\"row-flow\">\n      <div *ngFor=\"let discog of discogs\" class=\"column-elt\">\n        <img [src]=\"discog.thumb\">\n        <p>\n          <span *ngIf=\"discog.title\" class=\"label\">Titre : </span>{{ discog.title }}\n          <span *ngIf=\"discog.year\" class=\"label\">Année : </span>{{ discog.year }}\n          <span *ngIf=\"discog.style\" class=\"label\">Style : </span>{{ discog.style }}\n          <span *ngIf=\"discog.label\" class=\"label\">Label : </span>{{ discog.label}}\n          <span *ngIf=\"discog.format\" class=\"label\">Support : </span>{{ discog.format?.slice(0,50) }}\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"extractWiki && !loading\" class=\"header\">\n  <div class=\"item-header\">\n    <img class=\"logo\" alt=\"logo Discogs\" src='../../../assets/Wikipedia.svg' />\n  </div>\n  <div class=\"content\">\n    {{extractWiki}}\n  </div>\n\n</div>\n\n<div *ngIf=\"videos.length>0 && !loading\" class=\"header\">\n  <div class=\"item-header\">\n    <img class=\"logo\" alt=\"logo Youtube\" src='../../../assets/youtube.svg' />\n    <div class=\"slider\" fxShow fxHide.xs>\n      <mat-label>Taille de la grille : </mat-label>\n      <mat-slider [max]=\"8\" [min]=\"1\" [(ngModel)]=\"preference.matSliderValue\"></mat-slider>\n      <mat-icon [matBadge]=\"preference.matSliderValue\" matBadgeColor=\"primary\">view_module</mat-icon>\n    </div>\n  </div>\n\n  <div class=\"content\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n      <div class=\"grid\" [fxFlex]=\"(100/preference.matSliderValue) + '%'\" fxFlex.sm=\"33%\" fxFlex.xs=\"100%\"\n        *ngFor=\"let video of videos; index as i;\">\n        <mat-card class=\"card\" fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">\n          <mat-card-header>\n            <mat-card-title>{{ video.channelTitle }}</mat-card-title>\n            <mat-card-subtitle>{{ video.publishedAt }}</mat-card-subtitle>\n          </mat-card-header>\n          <img mat-card-image [src]=\"video.thumbnail\">\n          <mat-card-content>\n            <p>\n              {{ video.title }}\n            </p>\n          </mat-card-content>\n          <mat-card-actions>\n            <button mat-raised-button color=\"primary\" (click)=\"openDialog(i)\">LIRE</button>\n          </mat-card-actions>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n\n</div>\n</div>","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","<div class=\"bg-img\">\n    <app-toolbar></app-toolbar>\n    <app-rss-flux></app-rss-flux>\n</div>\n\n\n\n  \n","export enum StationsEnum {\n  FRANCEINTER = 'FRANCEINTER',\n  FRANCEINFO = 'FRANCEINFO',\n  FRANCEBLEU = 'FRANCEBLEU',\n  FRANCEMUSIQUE = 'FRANCEMUSIQUE',\n  FRANCECULTURE = 'FRANCECULTURE',\n  MOUV = \"MOUV\",\n  FIP = 'FIP'\n}\n","import {Injectable, OnDestroy} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DestroyService extends Observable<void> implements OnDestroy {\n  private readonly life$ = new Subject<void>();\n\n  constructor() {\n    super(subscriber => this.life$.subscribe(subscriber));\n  }\n\n  /**\n   * On Destroy\n   */\n  ngOnDestroy() {\n    this.life$.next();\n    this.life$.complete();\n  }\n}","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { timer } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { AudioService } from 'src/app/services/audio.service';\nimport { DestroyService } from 'src/app/services/destroy.service';\n\n@Component({\n  selector: 'app-audio-element',\n  templateUrl: './audio-element.component.html',\n  styleUrls: ['./audio-element.component.scss']\n})\nexport class AudioElementComponent implements AfterViewInit {\n  @Input() src: String = 'https://icecast.radiofrance.fr/fip-midfi.mp3?id=radiofrance';\n  public isPlaying = false;\n  @ViewChild('audio') audio: ElementRef;\n  @ViewChild('tooltip') tooltip: MatTooltip;\n\n  constructor(private audioService: AudioService, private destroy$: DestroyService) {}\n\n  /**\n   * SET volume & initialize data\n   *\n   * @memberof AudioElementComponent\n   */\n  ngAfterViewInit(): void {\n    timer(500).subscribe(() => (this.audio.nativeElement.volume = 0.1));\n    this.audioService.getIsPlaying$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((isPlaying: boolean) => {\n        this.isPlaying = isPlaying;\n        this.isPlaying ? this.audio.nativeElement.play() : this.audio.nativeElement.pause();\n      });\n  }\n\n  /**\n   * onClick on icon PLAY/PAUSE player\n   *\n   * @memberof AudioElementComponent\n   */\n  public onTooglePlay(): void {\n    this.isPlaying ? this.audioService.setIsPlaying(false) : this.audioService.setIsPlaying(true);\n  }\n\n  /**\n   * onClick to change volume\n   *\n   * @param {string} direction\n   * @memberof AudioElementComponent\n   */\n  public onVolume(direction: string): void {\n    const volume = this.audio.nativeElement.volume;\n    if (volume <= 1 && volume >= 0) {\n      this.audio.nativeElement.volume += direction === 'up' ? 0.1 : -0.1;\n    }\n    this.tooltip.show();\n    setTimeout(() => this.tooltip.hide(), 1000);\n  }\n}\n","<audio [src]=\"src\" #audio controls autoplay preload=\"auto\" style=\"display: none\">\n  <source type=\"audio/mpeg\" />\n</audio>\n\n<section class=\"row\">\n  <button (click)=\"onTooglePlay()\" mat-mini-fab color=\"accent\" aria-label=\"Example icon button with a bookmark icon\">\n    <mat-icon *ngIf=\"isPlaying\">pause</mat-icon>\n    <mat-icon *ngIf=\"!isPlaying\">play_arrow</mat-icon>\n  </button>\n\n  <div class=\"my-level\" #tooltip=\"matTooltip\" [matTooltip]=\"audio.volume | number: '1.1-1'\"></div>\n\n  <button\n    [disabled]=\"audio.volume <= 0.1 ? true : false\"\n    (click)=\"onVolume('down')\"\n    mat-icon-button\n    color=\"accent\"\n    aria-label=\"button volume_down\"\n  >\n    <mat-icon>volume_down</mat-icon>\n  </button>\n  <button\n    [disabled]=\"audio.volume >= 0.9 ? true : false\"\n    (click)=\"onVolume('up')\"\n    mat-icon-button\n    color=\"accent\"\n    aria-label=\"button volume_up\"\n  >\n    <mat-icon>volume_up</mat-icon>\n  </button>\n</section>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './modules/material.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SearchListComponent } from './components/search-list/search-list.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { WatchComponent } from './components/watch/watch.component';\nimport { BottomSheetComponent } from './components/bottom-sheet/bottom-sheet.component';\nimport { TableComponent } from './components/table/table.component';\nimport { StarRatingComponent } from './components/star-rating/star-rating.component';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { PreferenceComponent } from './components/preference/preference.component';\nimport { RadioPlayerComponent } from './components/radio-player/radio-player.component';\nimport { RssFluxComponent } from './components/rss-flux/rss-flux.component';\nimport { GraphQLModule } from './graphql.module';\nimport { APP_INITIALIZER } from '@angular/core';\nimport { PreferenceService } from './services/preference.service';\nimport { AudioElementComponent } from './components/audio-element/audio-element.component';\nimport { IframeTrackerDirective } from './directives/iframe-tracker.directive';\n\nexport function initializeApp(pref: PreferenceService) {\n  return (): Promise<any> => { \n    return pref.init();\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchListComponent,\n    WatchComponent,\n    BottomSheetComponent,\n    TableComponent,\n    StarRatingComponent,\n    ToolbarComponent,\n    PreferenceComponent,\n    RadioPlayerComponent,\n    RssFluxComponent,\n    AudioElementComponent,\n    IframeTrackerDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    GraphQLModule\n  ],\n  providers: [{\n      provide: APP_INITIALIZER,\n      useFactory: initializeApp,\n      deps: [PreferenceService],\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment.prod';\nimport { QueryDiscogs } from '../models/queryDiscogs.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DiscogsService {\n\n    private url: string = environment.urlApiDiscogs;\n    private params: QueryDiscogs = {\n        q: \"\",\n        per_page: 50,\n        token: environment.discogsToken,\n        artist: \"\",\n    }\n\n    constructor(private http: HttpClient) { }\n\n    getAll(q: string): Observable<any> {\n        this.params.q = encodeURI(q);\n        let endPoint = `${this.url}/database/search?`;\n        Object.keys(this.params).forEach(key => endPoint += \"&\" + key + \"=\" + this.params[key]);\n        return this.http.get(endPoint, { responseType: 'json' });\n    }\n\n    getByArtistName(queryDiscogs: QueryDiscogs): Observable<any> {\n        this.params.artist = encodeURI(queryDiscogs.q);\n        this.params.per_page = queryDiscogs.per_page;\n        let endPoint = `${this.url}/database/search?`;\n        Object.keys(this.params).forEach(key => endPoint += \"&\" + key + \"=\" + this.params[key]);\n        return this.http.get(endPoint, { responseType: 'json' });\n    }\n\n    getContributorById(id: number): Observable<any> {\n        let endPoint = `${this.url}/artists/${id}`;\n        return this.http.get(endPoint, { responseType: 'json' });\n    }\n\n}","export const environment = {\n  production: true,\n  discogsToken: \"lFqQfxurDTjYekydiilIbmdglWEdZqWinZMEnugw\",\n  youtubeToken: \"AIzaSyDL_mFIhyWvHaC_auDh1xWpHMQ5nENbqnU\",\n  urlApiDiscogs: \"https://api.discogs.com\",\n  urlApiYoutube: \"https://www.googleapis.com/youtube/v3/search?\",\n  //urlBack: \"http://localhost:5001/fourthproject-aff75/us-central1/app/fire\",\n  urlBack: \"https://us-central1-fourthproject-aff75.cloudfunctions.net/app/fire\",\n};\n","import {Injectable} from '@angular/core';\nimport {ApolloQueryResult} from '@apollo/client/core';\nimport {Apollo, gql, QueryRef} from 'apollo-angular';\nimport {Observable} from 'rxjs';\nimport {map, tap} from 'rxjs/operators';\nimport {StationsEnum} from '../enums/radioFrance.enum';\nimport {Brand, Grid, Live} from '../models/radioFrance.interface';\n\n// see https://apollo-angular.com/docs/development-and-testing/testing\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RadioService {\n  constructor(private apollo: Apollo) {}\n\n  /**\n   * GET an object LIVE by StationsEnum\n   *\n   * @param {StationsEnum} station\n   * @return {*}  {QueryRef<Live>}\n   * @memberof RadioService\n   */\n  public getLive(station: StationsEnum): QueryRef<Live> {\n    const GET_LIVE = gql`\n      query GetLive($station: StationsEnum!) {\n        live(station: $station) {\n          show {\n            ... on DiffusionStep {\n              start\n              end\n              __typename\n              diffusion {\n                title\n                standFirst\n              }\n            }\n            ... on BlankStep {\n              start\n              end\n              __typename\n              title\n            }\n          }\n          program {\n            ... on DiffusionStep {\n              start\n              end\n              __typename\n              diffusion {\n                title\n                standFirst\n              }\n            }\n            ... on BlankStep {\n              start\n              end\n              __typename\n              title\n            }\n          }\n          song {\n            ... on TrackStep {\n              start\n              end\n              __typename\n              track {\n                title\n                performers\n              }\n            }\n          }\n        }\n      }\n    `;\n\n    return this.apollo.watchQuery<any>({\n      query: GET_LIVE,\n      variables: {station}\n    });\n  }\n\n  /**\n   * GET an object BRAND by StationsEnum\n   *\n   * @param {StationsEnum} station\n   * @return {*}  {QueryRef<Brand>}\n   * @memberof RadioService\n   */\n  private getBrand(station: StationsEnum): QueryRef<Brand> {\n    const GET_BRAND = gql`\n      query GetBrand($id: StationsEnum!) {\n        brand(id: $id) {\n          id\n          title\n          baseline\n          description\n          websiteUrl\n          liveStream\n          localRadios {\n            id\n            title\n            description\n            liveStream\n          }\n          webRadios {\n            id\n            title\n            description\n            liveStream\n          }\n        }\n      }\n    `;   \n    return this.apollo.watchQuery<any>({\n      query: GET_BRAND,\n      variables: {id: station}\n    });\n  }\n\n  /**\n   * GET an object GRID by StationsEnum\n   *\n   * @private\n   * @param {StationsEnum} station\n   * @return {*}  {QueryRef<Grid>}\n   * @memberof RadioService\n   */\n  private getGrid(station: StationsEnum): QueryRef<Grid> {\n    const end = Math.round(new Date().getTime() / 1000);\n    const start = end - 3600; // il y a 1 heure\n    const GET_GRID = gql`\n      query GetGrid($start: Int!, $end: Int!, $station: StationsEnum!) {\n        grid(start: $start, end: $end, station: $station, includeTracks: true) {\n          ... on TrackStep {\n            start\n            end\n            __typename\n            track {\n              title\n              performers\n            }\n          }\n          ... on DiffusionStep {\n            start\n            end\n            __typename\n            diffusion {\n              title\n              standFirst\n            }\n          }\n          ... on BlankStep {\n            start\n            end\n            __typename\n            title\n          }\n        }\n      }\n    `;\n    return this.apollo.watchQuery<any>({\n      query: GET_GRID,\n      variables: {start, end, station}\n    });\n  }\n\n  /**\n   * GET observable of GRID\n   *\n   * @param {StationsEnum} station\n   * @return {*}  {Observable<Grid>}\n   * @memberof RadioService\n   */\n  public subscribeGrid(station: StationsEnum): Observable<Grid> {\n    return this.getGrid(station).valueChanges.pipe(map((result: ApolloQueryResult<Grid>) => result.data));\n  }\n\n  /**\n   * GET observable of BRAND\n   *\n   * @param {StationsEnum} station\n   * @return {*}  {Observable<Brand>}\n   * @memberof RadioService\n   */\n  public subscribeBrand(station: StationsEnum): Observable<Brand> {   \n    return this.getBrand(station).valueChanges.pipe(\n      map((result: ApolloQueryResult<Brand>) => result.data));\n  }\n\n  /**\n   * GET observable of LIVE\n   *\n   * @param {StationsEnum} station\n   * @return {*}  {Observable<Live>}\n   * @memberof RadioService\n   */\n  public subscribeLive(station: StationsEnum): Observable<Live> {\n    return this.getLive(station).valueChanges.pipe(map((result: ApolloQueryResult<Live>) => result.data));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AudioService {\n\n  private isPlaying$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  constructor() { }\n\n  public get getIsPlaying$(): Observable<boolean> {\n    return this.isPlaying$.asObservable();\n  }\n\n  public setIsPlaying(isPlaying: boolean): void {\n    this.isPlaying$.next(isPlaying);\n  }\n\n}\n","import { Component, Input, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-star-rating',\n  templateUrl: './star-rating.component.html',\n  styleUrls: ['./star-rating.component.scss']\n})\nexport class StarRatingComponent {\n\n  @Input('rating') rating: number;\n  @Input() ratingArr: number[] = [0,1,2,3,4];\n  @Output() ratingUpdated = new EventEmitter();\n\n  constructor() {\n  }\n\n  onClick(rating:number) {    \n    this.rating = rating;\n    this.ratingUpdated.emit(rating);\n  }\n\n  showIcon(index:number) {\n    if (this.rating >= index + 1) {\n      return 'star';\n    } else {\n      return 'star_border';\n    }\n  }\n\n}\n\n\n\n","<button mat-icon-button\n*ngFor=\"let ratingId of ratingArr;index as i\"\n(click)=\"onClick(i+1)\"\n[matTooltip]=\"i+1\"\nmatTooltipPosition=\"above\">\n    <mat-icon>\n      {{showIcon(i)}}\n    </mat-icon>\n  </button>\n\n  ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment.prod';\nimport { QueryGAPI } from '../models/queryGAPI.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  private url: string = environment.urlApiYoutube;\n  private params = {\n    q: null,\n    order: null,\n    maxResults: 12,\n    key: environment.youtubeToken,\n    part: \"snippet\",\n    type: \"video\"\n};\n\n  constructor(private http: HttpClient) { }\n\n  getVideos(query: QueryGAPI): Observable<any> {\n    this.params.q = encodeURI(query.q);\n    this.params.order = query.order;\n    this.params.maxResults = query.maxResults;\n    let endPoint = `${this.url}/youtube/v3/search?`;\n    Object.keys(this.params).forEach(key => endPoint += \"&\" + key + \"=\" + this.params[key]);\n    return this.http.get(endPoint)\n      .pipe(\n        map((response: any) => response.items)\n      );\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment.prod';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class VideoService {\n\n    private URL_BACKEND: string = environment.urlBack;\n\n    constructor(private http: HttpClient) { }\n\n    createVideo(data: any): Observable<any> {\n        return this.http.post(this.URL_BACKEND, data.video, { responseType: 'json' });\n    }\n\n    updateVideo(data: any): Observable<any> {\n        return this.http.put(this.URL_BACKEND + '/' + data.video.videoId, data.video,  { responseType: 'json' });\n    }\n\n    findAll(): Observable<any> {\n        return this.http.get(this.URL_BACKEND, { responseType: 'json' });\n    }\n\n    findByCategorie(categorie: string): Observable<any> {\n        return this.http.get(this.URL_BACKEND + \"/filtre/\" + categorie, { responseType: 'json' });\n    }\n\n    deleteVideo(data: any): Observable<any> {\n        return this.http.delete(this.URL_BACKEND + '/' + data.video.videoId, { responseType: 'json' });\n    }\n\n}\n\n\n","import { ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { Preference } from 'src/app/models/preference.interface';\nimport { VideoService } from 'src/app/services/video.service';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n\n  @ViewChild('drawer') public drawer;\n  @ViewChild('box') public box;\n  showInputSearch: boolean = false;\n  categories: any = [];\n\n  constructor(private router: Router, private videoService: VideoService) { }\n\n  ngOnInit(): void {\n    this.getCategorie();\n  }\n\n  getCategorie() {\n    this.videoService.findAll().pipe(take(1)).subscribe(array => {\n      this.categories = new Set(array.map(item => item.categorie));\n    })\n  }\n\n  showTable(categorie: string) {\n    if (this.drawer.opened) {\n      this.drawer.close();\n    }\n    this.router.navigateByUrl(`table/${categorie}`);\n  }\n\n  onEnter(value: string) {\n    if (value) this.router.navigateByUrl(`list/${value}`);\n  }\n\n  toogleInput() {\n    this.showInputSearch = !this.showInputSearch;\n    if (this.drawer.opened) {\n      this.drawer.close();\n    }\n    if (this.box !== undefined) {\n      if (this.box.nativeElement.value !== \"\") {\n        this.onEnter(this.box.nativeElement.value);\n        this.box.nativeElement.value = \"\"\n      }\n    }\n  }\n\n\n}\n","\n\n<mat-toolbar color=\"primary\" class=\"mat-toolbar-example\">\n  <img/>\n\n  <span class=\"example-spacer\"></span>\n\n  <app-radio-player #playerComponent></app-radio-player>\n\n  <span class=\"example-spacer\"></span>\n\n  <div *ngIf=\"showInputSearch\" class=\"input\">\n    <input #box (keyup.enter)=\"onEnter(box.value)\" matInput name=\"q\">\n  </div>\n\n  <button type=\"button\" mat-icon-button (click)=\"toogleInput(); playerComponent.toggleWindowDesktop()\">\n    <mat-icon>search</mat-icon>\n  </button>\n\n\n  <button mat-icon-button [matMenuTriggerFor]=\"belowMenu\">\n    <mat-icon>list</mat-icon>\n  </button>\n<!--   <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item routerLink=\"table\" (click)=\"drawer.close()\" >Toute catégorie confondue</button>\n    <button mat-menu-item *ngFor=\"let categorie of categories\" [value]=\"categorie\" (click)=\"showTable(categorie)\" >{{categorie}}</button>\n  </mat-menu> -->\n\n  <mat-menu #belowMenu=\"matMenu\" yPosition=\"below\">\n    <ng-container *ngIf=\"categories\">\n    <mat-selection-list #list [multiple]=\"false\" (selectionChange)=\"showTable(list.selectedOptions.selected[0]?.value)\">\n      <mat-list-option routerLink=\"table/all\" (click)=\"drawer.close()\">Toute catégorie confondue</mat-list-option>\n      <mat-list-option *ngFor=\"let categorie of categories\" [value]=\"categorie\">\n        {{categorie}}\n      </mat-list-option>\n    </mat-selection-list>\n  </ng-container>\n  </mat-menu>\n\n  <button mat-icon-button (click)=\"drawer.toggle()\">\n    <mat-icon>settings</mat-icon>\n  </button>\n\n</mat-toolbar>\n\n\n<mat-drawer-container class=\"drawer-container\">\n  <mat-drawer #drawer class=\"drawer\">\n    <app-preference></app-preference>\n  </mat-drawer>\n  <mat-drawer-content class=\"drawer-content\">\n    <router-outlet></router-outlet>\n  </mat-drawer-content>\n</mat-drawer-container>\n\n\n\n\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {Preference} from '../../models/preference.interface';\nimport {PreferenceService} from 'src/app/services/preference.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {ToolbarComponent} from '../toolbar/toolbar.component';\nimport {StationsEnum} from 'src/app/enums/radioFrance.enum';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {DestroyService} from 'src/app/services/destroy.service';\n\n@Component({\n  selector: 'app-preference',\n  templateUrl: './preference.component.html',\n  styleUrls: ['./preference.component.scss']\n})\nexport class PreferenceComponent implements OnInit {\n  public stations: string[] = Object.values(StationsEnum);\n  public stationsk: string[] = Object.keys(StationsEnum);\n  public preference: Preference;\n\n  constructor(\n    private preferenceService: PreferenceService,\n    private snackBar: MatSnackBar,\n    private toolbar: ToolbarComponent,\n    private destroy$: DestroyService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadPref();\n  }\n\n  public loadPref(): void {\n    this.preferenceService.getPreference$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((preference: Preference) => (this.preference = preference));\n  }\n\n  public savePref(): void {\n    this.preferenceService\n      .update(this.preference)\n      .pipe(take(1))\n      .subscribe(res => {\n        this.snackBar.open('Préférence id: ' + res, 'Enregistré', {duration: 2000});\n        this.toolbar.drawer.close();\n      });\n  }\n\n  public switchDiscogs(): void {\n    this.preference.switchDiscogs = !this.preference.switchDiscogs;\n  }\n\n  public switchWikipedia(): void {\n    this.preference.switchWikipedia = !this.preference.switchWikipedia;\n  }\n\n  public switchYoutube(): void {\n    this.preference.switchYoutube = !this.preference.switchYoutube;\n  }\n}\n","<div class=\"container\">\n\n    <mat-list *ngIf=\"preference\">\n        <h2>Paramètres</h2>\n        <mat-divider></mat-divider>\n        <!-- Paramètres RADIO FRANCE -->\n        <mat-list-item>\n            <img class=\"logo-large\" alt=\"logo radio france\" src='../../../assets/Logo-radio-france.svg' />\n        </mat-list-item>\n            <mat-form-field *ngIf=\"preference\">\n                <mat-select [(ngModel)]=\"preference.stationRadioFrance\">\n                    <mat-option *ngFor=\"let station of stations\" [value]=\"station\">{{station}}</mat-option>\n                </mat-select>\n                <mat-label>Sélection station</mat-label>\n            </mat-form-field>\n        <mat-divider></mat-divider>\n        <!-- Paramètres DISCOGS -->\n        <mat-list-item>\n            <img class=\"logo\" alt=\"logo Discogs\" src='../../../assets/discogs vinyl record mark.svg' />\n            Recherche Discogs\n        </mat-list-item>\n        <div class=\"row\">\n            <mat-slide-toggle [(ngModel)]=\"preference.switchDiscogs\" (toggleChange)=\"switchDiscogs()\">Discogs\n            </mat-slide-toggle>\n        </div>\n            <mat-form-field>\n                <mat-label>Resultat Max</mat-label>\n                <input matInput type=\"number\" min=\"1\" max=\"100\" name=\"maxResults\"\n                    [(ngModel)]=\"preference.maxResultsDiscogs\">\n            </mat-form-field>\n        <mat-divider></mat-divider>\n        <!-- Paramètres WIKIPEDIA -->\n        <mat-list-item>\n            <img class=\"logo\" alt=\"logo Discogs\" src='../../../assets/Wiki.svg' />\n            Recherche Wikipedia\n        </mat-list-item>\n        <div class=\"row\">\n            <mat-slide-toggle [(ngModel)]=\"preference.switchWikipedia\" (toggleChange)=\"switchWikipedia()\">\n                Wikipedia</mat-slide-toggle>\n        </div>\n        <mat-divider></mat-divider>\n        <!-- Paramètres YOUTUBE -->\n        <mat-list-item>\n            <img class=\"logo\" alt=\"logo Discogs\" src='../../../assets/YouTube_full-color_icon_(2017).svg' />\n            Recherche Youtube\n        </mat-list-item>\n        <div class=\"row\">\n            <mat-slide-toggle [(ngModel)]=\"preference.switchYoutube\" (toggleChange)=\"switchYoutube()\">Youtube\n            </mat-slide-toggle>\n        </div>\n            <mat-form-field>\n                <mat-label>Resultat Max</mat-label>\n                <input matInput type=\"number\" min=\"1\" max=\"36\" name=\"maxResults\"\n                    [(ngModel)]=\"preference.maxResultsYoutube\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-select name=\"order\" [(ngModel)]=\"preference.orderYoutube\">\n                    <mat-option value=\"DATE\">Date</mat-option>\n                    <mat-option value=\"RATING\">Rating</mat-option>\n                    <mat-option value=\"RELEVANCE\">Relevance (default)</mat-option>\n                    <mat-option value=\"TITLE\">Title</mat-option>\n                    <mat-option value=\"VIDEOCOUNT\">VideoCount</mat-option>\n                    <mat-option value=\"VIEWCOUNT\">ViewCount</mat-option>\n                </mat-select>\n                <mat-label>Trier par</mat-label>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Grille d'affichage : </mat-label>\n                <input matInput type=\"number\" min=\"1\" max=\"8\" name=\"grille d'affichage\"\n                    [(ngModel)]=\"preference.matSliderValue\">\n            </mat-form-field>\n        <mat-divider></mat-divider>\n    </mat-list>\n    <div class=\"group-button-row\">\n        <button type=\"button\" mat-stroked-button color=\"primary\" class=\"button-reload\" (click)=\"loadPref()\">\n            <mat-icon>refresh</mat-icon>\n        </button>\n        <button type=\"button\" mat-stroked-button color=\"accent\" class=\"button-save\" (click)=\"savePref()\">\n            <mat-icon>save</mat-icon>\n        </button>\n    </div>\n</div>","import { Directive, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appIframeTracker]'\n})\nexport class IframeTrackerDirective implements OnInit {\n  private iframeMouseOver: boolean;\n\n  @Input() debug: boolean;\n\n  @Output() iframeClick = new EventEmitter<ElementRef>();\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this.renderer.listen(window, 'blur', () => this.onWindowBlur());\n  }\n\n  @HostListener('mouseover')\n  private onIframeMouseOver() {\n    this.log('Iframe mouse over');\n    this.iframeMouseOver = true;\n    this.resetFocusOnWindow();\n  }\n\n  @HostListener('mouseout')\n  private onIframeMouseOut() {\n    this.log('Iframe mouse out');\n    this.iframeMouseOver = false;\n    this.resetFocusOnWindow();\n  }\n\n  private onWindowBlur() {\n    if (this.iframeMouseOver) {\n      this.log('WOW! Iframe click!!!');\n      this.resetFocusOnWindow();\n      this.iframeClick.emit(this.el);\n    }\n  }\n\n  private resetFocusOnWindow() {\n    setTimeout(() => {\n      this.log('reset focus to window');\n      window.focus();\n    }, 100);\n  }\n\n  private log(message: string) {\n    if (this.debug) {\n      console.log(message);\n    }\n  }\n}\n","<ng-container *ngIf=\"!isMobile; else MobileView\">\n  <div #player class=\"player-desktop\" [ngStyle]=\"{width: song ? '420px;' : '102px;'}\">\n\n    <ng-container #audioSource></ng-container>\n\n    <ng-container *ngIf=\"song && player.style.width === '420px'\">\n      <button mat-icon-button color=\"accent\" [matMenuTriggerFor]=\"belowMenu\"><mat-icon>history</mat-icon></button>\n      <mat-menu #belowMenu=\"matMenu\" yPosition=\"below\">\n        <ng-container *ngIf=\"grid\">\n          <mat-selection-list\n            #songs\n            [multiple]=\"false\"\n            (selectionChange)=\"searchByHistory(songs.selectedOptions.selected[0]?.value)\"\n          >\n            <mat-list-option disabled>TITRES DIFFUSÉS (dans la dernière heure) :</mat-list-option>\n            <mat-list-option *ngFor=\"let song of grid\" [value]=\"song\">\n              {{ song.start * 1000 | date: 'HH:mm' }} - {{ song.title ? song.title : '' }} -\n              {{ song.artist }}\n            </mat-list-option>\n          </mat-selection-list>\n        </ng-container>\n      </mat-menu>\n\n      <button (click)=\"onSearch()\" mat-icon-button color=\"accent\" aria-label=\"Example icon button with a bookmark icon\">\n        <mat-icon>search</mat-icon>\n      </button>\n\n      <div class=\"row\">\n        <p class=\"countdown\">{{ minutesLeft | number: '2.0' }} : {{ secondsLeft | number: '2.0' }}</p>\n        <div class=\"track-live\" #track>\n          <div class=\"performers\">{{ song.artist }}</div>\n          <div class=\"title\">{{ song.title ? song.title : '' }}</div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</ng-container>\n\n<ng-template #MobileView>\n  <ng-container>\n\n\n\n    <div #player class=\"player-mobile row\" [ngClass]=\"playerIsOpen ? 'open' : 'close'\">\n\n      <div class=\"row-center-center\">\n        <div class=\"col\">\n          <div class=\"radius-inverted bottom-right\"></div>\n          <div class=\"tab-icon row-center-center\">\n            <mat-icon (click)=\"playerIsOpen = !playerIsOpen\">chevron_left</mat-icon>\n          </div>\n          <div class=\"radius-inverted top-right\"></div>\n        </div>\n        <div class=\"tab-content\">\n\n          <div class=\"row-btn\">\n            <ng-container #audioSource></ng-container>\n\n            <div *ngIf=\"song\">\n  \n  \n              <button mat-icon-button color=\"accent\" [matMenuTriggerFor]=\"belowMenu\"><mat-icon>history</mat-icon></button>\n              <mat-menu #belowMenu=\"matMenu\" yPosition=\"below\">\n                <ng-container *ngIf=\"grid\">\n                  <mat-selection-list\n                    #songs\n                    [multiple]=\"false\"\n                    (selectionChange)=\"searchByHistory(songs.selectedOptions.selected[0]?.value)\"\n                  >\n                    <mat-list-option disabled>TITRES DIFFUSÉS (dans la dernière heure) :</mat-list-option>\n                    <mat-list-option *ngFor=\"let song of grid\" [value]=\"song\">\n                      {{ song.start * 1000 | date: 'HH:mm' }} - {{ song.title }} -\n                      {{ song.artist }}\n                    </mat-list-option>\n                  </mat-selection-list>\n                </ng-container>\n              </mat-menu>\n  \n              <button\n                (click)=\"onSearch()\"\n                mat-icon-button\n                color=\"accent\"\n                aria-label=\"Example icon button with a bookmark icon\"\n              >\n                <mat-icon>search</mat-icon>\n              </button>\n  \n            </div>\n          </div>\n\n\n          <ng-container *ngIf=\"song\">\n\n            <div class=\"row-txt\">\n              <span class=\"station\">{{ brandDTO.viewValue }}</span>\n            </div>\n            <div class=\"row-txt\">\n              <p class=\"countdown\">{{ minutesLeft | number: '2.0' }} : {{ secondsLeft | number: '2.0' }}</p>\n              <div class=\"track-live\" #track>\n                <div class=\"performers\">{{ song.artist }}</div>\n                <div class=\"title\">{{ song.title }}</div>\n              </div>\n            </div>\n          </ng-container>\n  \n        </div>\n      </div>\n\n\n\n\n    </div>\n\n    <div class=\"backdrop\" (click)=\"playerIsOpen = !playerIsOpen\" [ngClass]=\"playerIsOpen ? 'open' : 'close'\"></div>\n  </ng-container>\n</ng-template>\n","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { AfterViewInit, Component, ComponentFactoryResolver, ComponentRef, ElementRef, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Title } from \"@angular/platform-browser\";\nimport { Router } from '@angular/router';\nimport { interval, Subscription, timer } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { StationsEnum } from 'src/app/enums/radioFrance.enum';\nimport { Preference } from 'src/app/models/preference.interface';\nimport { Brand, BrandDTO, Grid, SongDTO } from 'src/app/models/radioFrance.interface';\nimport { DestroyService } from 'src/app/services/destroy.service';\nimport { PreferenceService } from 'src/app/services/preference.service';\nimport { RadioTransformService } from 'src/app/services/radio-transform.service';\nimport { RadioUtilService } from 'src/app/services/radio-util.service';\nimport { RadioService } from 'src/app/services/radio.service';\nimport { AudioElementComponent } from '../audio-element/audio-element.component';\n\n@Component({\n  selector: 'app-radio-player',\n  templateUrl: './radio-player.component.html',\n  styleUrls: ['./radio-player.component.scss']\n})\nexport class RadioPlayerComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('track') trackElt: ElementRef<HTMLElement>;\n  @ViewChild('player') player: ElementRef;\n  @ViewChild('audioSource', {read: ViewContainerRef}) audioSource!: ViewContainerRef;\n  public brandDTO: BrandDTO = {\n    value: 'https://icecast.radiofrance.fr/fip-midfi.mp3?id=radiofrance', //\"https://icecast.radiofrance.fr/fip-midfi.mp3?id=openapi\n    viewValue: 'FIP'\n  };\n  private station: StationsEnum;\n  public song: SongDTO;\n  public grid: SongDTO[];\n  public secondsLeft = 0;\n  public minutesLeft = 0;\n  private msPerSecond = 1000;\n  private msPerMinute = 60 * 1000;\n  private msPerHour = 60 * 60 * 1000;\n  public isMobile: boolean;\n  public playerIsOpen = false;\n\n  private ticker$ = new Subscription;\n\n  constructor(\n    private radio: RadioService,\n    private router: Router,\n    private preferenceService: PreferenceService,\n    private destroy$: DestroyService,\n    private breakpointObserver: BreakpointObserver,\n    private transform: RadioTransformService,\n    private util: RadioUtilService,\n    private titleService:Title,\n    private resolver: ComponentFactoryResolver\n  ) {}\n\n  /**\n   * SUBSCRIBE width of screen\n   *\n   * @memberof RadioPlayerComponent\n   */\n  ngOnInit(): void {\n    this.breakpointObserver\n      .observe(Breakpoints.XSmall)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(result => (this.isMobile = result.matches));\n  }\n\n  /**\n   * Initialize data\n   *\n   * @memberof RadioPlayerComponent\n   */\n  ngAfterViewInit(): void {\n    this.initializeData();\n  }\n\n  /**\n   * SUBSCRIBE preference.station to initialize & update data\n   *\n   * @private\n   * @memberof RadioPlayerComponent\n   */\n  private initializeData(): void {\n    this.preferenceService.getPreference$.pipe(takeUntil(this.destroy$)).subscribe((preference: Preference) => {\n      if (preference) {\n        this.station = this.transform.checkPref(preference);\n        this.getBrand();\n        this.getLive(0);\n      }\n    });\n  }\n\n  /**\n   * GET stream URL of station\n   *\n   * @private\n   * @memberof RadioPlayerComponent\n   */\n  private getBrand(): void {\n    this.radio\n      .subscribeBrand(this.station)\n      .pipe(take(1))\n      .subscribe((brand: Brand) => {\n        this.brandDTO = this.transform.brandMapper(brand);\n        this.setAudio();\n      });\n  }\n\n  /**\n   * GET history of station\n   *\n   * @private\n   * @memberof RadioPlayerComponent\n   */\n  private getGrid(): void {\n    this.radio\n      .subscribeGrid(this.station)\n      .pipe(take(1))\n      .subscribe((grid: Grid) => {\n        (this.grid = this.transform.gridMapper(grid.grid))\n      });\n  }\n\n  /**\n   * GET current track of station\n   *\n   * @private\n   * @param {number} delay\n   * @memberof RadioPlayerComponent\n   */\n  private getLive(delay: number): void {\n    timer(delay).subscribe(async () => {\n      const result = await this.radio.getLive(this.station).refetch();\n      this.song = result.data.live ? this.transform.factory(result.data) : null;\n      if (this.song) {\n        this.titleService.setTitle([this.song.artist, this.song.title].join(' '));\n        this.setTicker(this.song);\n        this.setAnimation(this.song);\n        this.getGrid();\n        this.getLive(this.util.delay(this.song.end) + 1000);\n      } else {\n        this.getLive(2000);\n      }\n    });\n  }\n\n  /**\n   * SET ticker of current track\n   *\n   * @private\n   * @memberof RadioPlayerComponent\n   */\n  private setTicker(song: SongDTO): void {\n    this.ticker$.unsubscribe();\n    this.ticker$ = interval(1000).subscribe(() => {\n      const timeDifference = song.end * 1000 - new Date().getTime();\n      if (timeDifference > 0) {\n        this.minutesLeft = Math.floor((timeDifference % this.msPerHour) / this.msPerMinute);\n        this.secondsLeft = Math.floor((timeDifference % this.msPerMinute) / this.msPerSecond);\n      }\n    });\n  }\n\n  /**\n   * SET text animation \n   *\n   * @private\n   * @memberof RadioPlayerComponent\n   */\n  private setAnimation(song: SongDTO): void {\n    timer(500).subscribe(() => {\n      this.util.setAnimation(song.artist, this.trackElt.nativeElement.children[0]);\n      this.util.setAnimation(song.title, this.trackElt.nativeElement.children[1]);\n    });\n  }\n\n  /**\n   * onClick icon SEARCH request\n   *\n   * @memberof RadioPlayerComponent\n   */\n  public onSearch(): void {\n    if (this.song.artist) this.router.navigateByUrl(`list/${this.song.artist}`);\n  }\n\n  /**\n   * onClick one item into popover history so launch search request\n   *\n   * @param {SongDTO} song\n   * @memberof RadioPlayerComponent\n   */\n  public searchByHistory(song: SongDTO): void {\n    this.router.navigateByUrl(`list/${song.artist}`);\n  }\n\n  /**\n   * method shared with toolbar (when toggle input search, so player is hidden)\n   *\n   * @memberof RadioPlayerComponent\n   */\n  public toggleWindowDesktop(): void {\n    if (!this.isMobile && this.song.title) {\n      const widthOfWindow = this.player.nativeElement.style.width;\n      this.player.nativeElement.style.width = widthOfWindow === '420px' ? '102px' : '420px';\n    }\n  }\n\n  /**\n   * createComponent audio HTMLElement to set src \n   *\n   * @private\n   * @memberof RadioPlayerComponent\n   */\n  private setAudio(): void {\n    this.secondsLeft = 0;\n    this.minutesLeft = 0;\n    this.audioSource.clear();\n    const factory = this.resolver.resolveComponentFactory(AudioElementComponent);\n    const viewRef: ComponentRef<AudioElementComponent> = this.audioSource.createComponent<AudioElementComponent>(factory);\n    viewRef.instance.src = this.brandDTO.value;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { StationsEnum } from '../enums/radioFrance.enum';\nimport { Preference } from '../models/preference.interface';\nimport { BlankStep, Brand, BrandDTO, DiffusionStep, Live, SongDTO, Step, StepEnum, TrackStep } from '../models/radioFrance.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RadioTransformService {\n\n  constructor() { }\n\n  public factory(data: Live): SongDTO {\n    if (data.live.song) {\n      return this.checkInstance(data.live.song);\n    } else if (data.live.program) {\n      return this.checkInstance(data.live.program);\n    } else if (data.live.show) {\n      return this.checkInstance(data.live.show);\n    }\n  }\n\n  public checkInstance(step: Step): SongDTO {\n    if (step.__typename === StepEnum.TrackStep) {\n      return this.trackStepToPlayer(step as TrackStep);\n    } else if (step.__typename === StepEnum.DiffusionStep) {\n      return this.diffusionStepToPlayer(step as DiffusionStep);\n    } else if (step.__typename === StepEnum.BlankStep) {\n      return this.blanckStepToPlayer(step as BlankStep);\n    }\n  }\n\n  private diffusionStepToPlayer(step: DiffusionStep): SongDTO {\n    return {\n      title: step.diffusion.title,\n      artist: step.diffusion.standFirst,\n      start: step.start,\n      end: step.end,\n    }\n  }\n\n  private blanckStepToPlayer(step: BlankStep): SongDTO {\n    return {\n      title: step.title,\n      artist: null,\n      start: step.start,\n      end: step.end,\n    }\n  }\n\n  private trackStepToPlayer(step: TrackStep): SongDTO {\n    return {\n      title: step.track.title,\n      artist: step.track.performers.join(' & '),\n      start: step.start,\n      end: step.end,\n    }\n  }\n\n  public gridMapper(grid: TrackStep[] | BlankStep[] | DiffusionStep[]): SongDTO[] {\n    let songs: SongDTO[] = [];\n    grid.forEach((song: TrackStep | BlankStep | DiffusionStep) => songs.push(this.checkInstance(song)));\n    return songs.slice().reverse();\n  }\n\n  public brandMapper(brand: Brand): BrandDTO {\n    let stream: string = '';\n    if (brand.brand.id === 'FRANCEBLEU') {\n      stream = brand.brand.localRadios.find( localRadio => localRadio.id === \"FRANCEBLEU_HERAULT\").liveStream\n    } else {\n      stream = brand.brand.liveStream\n    }\n    return {\n      value: stream,\n      viewValue: brand.brand.title,\n    }\n  }\n\n  public checkPref(preference: Preference): StationsEnum {\n    return Object.values(StationsEnum)\n          .filter(val => val === preference.stationRadioFrance)\n          .reduce(res => StationsEnum[res[0]]);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SearchListComponent } from './components/search-list/search-list.component';\nimport { TableComponent } from './components/table/table.component';\n\nconst routes: Routes = [\n  { path: 'table/:categorie', component: TableComponent },\n  { path: 'list/:q', component: SearchListComponent },\n  { path: '', redirectTo: 'table/all', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { NewsRss } from 'src/app/models/news-rss.interface';\nimport { DestroyService } from 'src/app/services/destroy.service';\nimport { RssService } from 'src/app/services/rss.service';\n\n@Component({\n  selector: 'app-rss-flux',\n  templateUrl: './rss-flux.component.html',\n  styleUrls: ['./rss-flux.component.scss']\n})\nexport class RssFluxComponent implements OnInit {\n  private rssUrl: string[] = [\n    'https://www.developpez.com/index/rss',\n    'https://www.leprogres.fr/rss',\n    'https://www.leprogres.fr/france-monde/rss',\n    'http://www.dna.fr/une-region/rss',\n    'http://www.ledauphine.com/actualite/a-la-une/rss'\n  ];\n  public rssThread: string = '';\n  private counter: number = 0;\n  @ViewChild('child') child: ElementRef;\n  private readingLoop: number = 1000;\n\n  constructor(private rss: RssService, private destroy$: DestroyService) {}\n\n  ngOnInit(): void {\n    this.fetchData(this.rssUrl[0]);\n  }\n\n  /**\n   * GET xml\n   *\n   * @private\n   * @memberof RssFluxComponent\n   */\n  private fetchData(url: string): void {\n    this.rss\n      .getRSSFeedData(url)\n      .pipe(take(1))\n      .subscribe(async data =>{\n        await this.transformData(data);\n      });\n  }\n\n  /**\n   * TRANSFORM xml to string\n   *\n   * @private\n   * @param {*} data\n   * @memberof RssFluxComponent\n   */\n  private async transformData(data: any) {\n    const result: NewsRss = await this.rss.parseRSS(data);\n    const items = result.rss.channel[0].item;\n    const counter = items.length;\n    this.rssThread = '';\n    for (const key in items) {\n      if (Object.prototype.hasOwnProperty.call(items, key)) {\n        const element = items[key].title[0];\n        this.rssThread += ` -- ${key}/${counter} : ${element}`;\n      }\n    }\n    this.readingLoop = this.rssThread.length * 100;\n    this.child.nativeElement.style.animation = `defilement-rtl ${\n      this.rssThread.length / 10\n    }s infinite linear`;\n    this.updateFeed();\n  }\n\n  /**\n   * UPDATE FEED RSS\n   *\n   * @private\n   * @memberof RssFluxComponent\n   */\n  private updateFeed(): void {\n    setTimeout(() => {\n      this.counter++;\n      this.fetchData(this.rssUrl[this.counter]);\n      if (this.counter > this.rssUrl.length) this.counter = 0;\n      this.counter++;\n    }, this.readingLoop);\n  }\n}\n","<div class=\"marquee-rtl\">\n  <!-- le contenu défilant -->\n  <div #child>{{ rssThread }}</div>\n</div>\n\n","export enum StepEnum {\n  DiffusionStep = 'DiffusionStep',\n  BlankStep = 'BlankStep',\n  TrackStep = 'TrackStep'\n}\nexport interface Live {\n  live: {\n    show: TrackStep | BlankStep | DiffusionStep;\n    program: TrackStep | BlankStep | DiffusionStep;\n    song: TrackStep;\n  };\n}\nexport interface Step {\n  id: string;\n  start: number;\n  end: number;\n  __typename: string;\n}\nexport interface TrackStep extends Step  {\n  id: string;\n  start: number;\n  end: number;\n  __typename: string;\n  track: {\n    id: string;\n    title: string;\n    albumTitle: string;\n    label: string;\n    mainArtists: string[];\n    authors: string[];\n    composers: string[];\n    performers: string[];\n    productionDate: number;\n    discNumber: number;\n    trackNumber: number;\n  }\n}\nexport interface BlankStep extends Step  {\n  id: string;\n  start: number;\n  end: number;\n  __typename: string;\n  title: string;\n  children: [TrackStep | BlankStep | DiffusionStep];\n}\nexport interface DiffusionStep extends Step {\n  id: string;\n  start: number;\n  end: number;\n  __typename: string;\n  children: TrackStep[] | BlankStep[] | DiffusionStep[];\n  diffusion: {\n    id: string;\n    title: string;\n    standFirst: string;\n    url: string;\n    published_date: string;\n    isStreamable: Boolean;\n    show: {\n      id: string;\n      title: string;\n      url: string;\n      standFirst: string;\n      podcast: {\n        rss: string;\n        itunes: string;\n      };\n    };\n  };\n}\nexport interface Brand {\n  brand: {\n    id: string;\n    title: string;\n    baseline: string;\n    description: string;\n    websiteUrl: string;\n    liveStream: string;\n    localRadios: [\n      {\n        id: string;\n        title: string;\n        description: string;\n        liveStream: string;\n      }\n    ];\n    webRadios: [\n      {\n        id: string;\n        title: string;\n        description: string;\n        liveStream: string;\n      }\n    ];\n  };\n}\nexport interface Grid {\n  grid: TrackStep[] | BlankStep[] | DiffusionStep[];\n}\nexport interface SongDTO {\n  title: string;\n  artist: string;\n  start: number;\n  end: number;\n}\nexport interface BrandDTO {\n  value: string;\n  viewValue: string;\n}\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RadioUtilService {\n  constructor() {}\n\n  public setAnimation(string: string, element: Element): void {\n    const stringWidth = this.mesureTxt(string);\n    const animation = stringWidth > element.clientWidth ? `animation: defilement ${string.length / 2}s infinite linear;` : 'animation: none;';\n    const width = `width: ${stringWidth}px;`;\n    element.setAttribute('style', width + animation);\n  }\n\n  /**\n   * Calculate lenght into pixel of string\n   *\n   * @private\n   * @param {string} str\n   * @return {*}  {number}\n   * @memberof RadioUtilService\n   */\n  private mesureTxt(str: string): number {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    ctx.font = '16px \"Helvetica Neue\"';\n    const strWidth = ctx.measureText(str).width\n    return Math.floor(strWidth);\n  }\n\n  /**\n   * Get delay between end & now\n   *\n   * @param {number} end\n   * @return {*}  {number}\n   * @memberof RadioUtilService\n   */\n  public delay(end: number): number {\n    const now: number = Math.floor(new Date().getTime());\n    return Math.abs(end * 1000 - now);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}